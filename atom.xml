<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EsNaSc</title>
  
  
  <link href="https://github.com/FeOAr/FeOAr.github.io.git/atom.xml" rel="self"/>
  
  <link href="https://github.com/FeOAr/FeOAr.github.io.git/"/>
  <updated>2020-10-27T13:47:18.075Z</updated>
  <id>https://github.com/FeOAr/FeOAr.github.io.git/</id>
  
  <author>
    <name>FeOAr</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL简略笔记</title>
    <link href="https://github.com/FeOAr/FeOAr.github.io.git/2020/10/26/MySql%E7%AE%80%E7%95%A5%E7%AC%94%E8%AE%B0/"/>
    <id>https://github.com/FeOAr/FeOAr.github.io.git/2020/10/26/MySql%E7%AE%80%E7%95%A5%E7%AC%94%E8%AE%B0/</id>
    <published>2020-10-25T16:00:00.000Z</published>
    <updated>2020-10-27T13:47:18.075Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL简略笔记"><a href="#MySQL简略笔记" class="headerlink" title="MySQL简略笔记"></a>MySQL简略笔记</h1><h2 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h2><ul><li><p>启动</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure></li><li><p>登录</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p <span class="comment">--连接数据库</span></span><br></pre></td></tr></table></figure></li><li><p>退出</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit;<span class="comment">--推出连接</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>其他</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 所有语句使用&#x27; ; &#x27;结尾</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;<span class="comment">--查看所有数据库</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;<span class="comment">--查看所有表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">describe</span> student;<span class="comment">--查看数据库中所有表的信息</span></span><br><span class="line"></span><br><span class="line">creat database teacher;<span class="comment">--船舰一个teacher数据库</span></span><br><span class="line"><span class="keyword">use</span> school <span class="comment">--切换数据库</span></span><br></pre></td></tr></table></figure></li><li><p><strong>数据库语言</strong></p></li></ul><ol><li><p>DDL    定义</p></li><li><p>DML   操作</p></li><li><p>DQL   查询</p></li><li><p>QCL   控制</p></li></ol><hr><h2 id="操作（了解）"><a href="#操作（了解）" class="headerlink" title="操作（了解）"></a>操作（了解）</h2><ol><li><p>创建数据库</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] company;<span class="comment">--中括号内为可选</span></span><br></pre></td></tr></table></figure></li><li><p>移出数据库</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> [<span class="keyword">IF</span> <span class="keyword">EXISTS</span>] company;</span><br></pre></td></tr></table></figure></li><li><p>使用数据库</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- tab键上方的符号，若表命或字段名是特殊字符，就需要带  ` `</span></span><br><span class="line"><span class="comment">--eg.</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`USER`</span><span class="comment">--此处user相当于一个java保留字，需要带``区别</span></span><br></pre></td></tr></table></figure></li><li><p>查看所有数据库</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASE</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="数据库列类型"><a href="#数据库列类型" class="headerlink" title="数据库列类型"></a>数据库列类型</h2><blockquote><p>数值</p></blockquote><ul><li>tinyint    非常小的数据    1字节</li><li>smallint 较小的数据        2字节</li><li>mediumint 中等大小的数据 3字节</li><li><strong>int          标准整数            4字节</strong></li><li>bigint     较大的数据        8字节</li><li>float       单精度浮点数    4字节</li><li>double   双精度浮点数    8字节（精度问题）</li><li>decimal 字符串形式浮点数    （金融计算一般使用）</li></ul><blockquote><p>字符串</p></blockquote><ul><li>char    固定大小字符串    0-255</li><li><strong>verchar    可变字符串    0-65535</strong> 对应Java的String    <em>常用</em></li><li>tinystext    微型文本    2^8 - 1</li><li><strong>text    文本串    2^16 - 1</strong>   保存大文本</li></ul><blockquote><p>时间日期</p></blockquote><ul><li>date    YYYY-MM-DD, 日期格式</li><li>time    HH: mm: ss,  时间格式</li><li><strong>datetime    YYYY-MM-DD HH: mm: ss    最常用的时间格式</strong></li><li><strong>timestamp    时间戳，1970/1/1至今的毫秒数，常用</strong></li><li>year   年份表示</li></ul><blockquote><p>NULL</p></blockquote><ul><li>无值，未知</li><li>不应使用NULL运算</li></ul><h2 id="数据库的字段属性（重点）"><a href="#数据库的字段属性（重点）" class="headerlink" title="数据库的字段属性（重点）"></a>数据库的字段属性（重点）</h2><ul><li>Unsigned：<ul><li>无符号的整数列</li><li>声明该列不能声明为负数</li></ul></li><li>zerofill<ul><li>不足位数以 0 填充</li></ul></li><li>AUTO_INCREMENT<ul><li>自动带上一条记录的基础上+1（默认）</li><li>通常用来设计唯一的主键，（主键整数类型）</li><li>可自定义主键自增的起始值与步长</li></ul></li><li>非空<ul><li>不填值则报错</li></ul></li><li>默认<ul><li>不指定该列的值则会有默认值</li></ul></li></ul><hr><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--eg.</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`student`</span>(</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">&#x27;学号&#x27;</span>, <span class="comment">/*COMMENT注释*/</span></span><br><span class="line">    <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    <span class="string">`pwd`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">    <span class="string">`sex`</span> <span class="built_in">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">    <span class="string">`birthday`</span> DATETIME <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">    <span class="string">`address`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">    <span class="string">`email`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span>(<span class="string">`id`</span>)</span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8</span><br></pre></td></tr></table></figure><p>格式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] <span class="string">`表名`</span>(</span><br><span class="line"><span class="string">`字段名`</span> 列类型 [属性][索引][注释],</span><br><span class="line">    <span class="string">`字段名`</span> 列类型 [属性][索引][注释],</span><br><span class="line">    <span class="string">`字段名`</span> 列类型 [属性][索引][注释],</span><br><span class="line">    <span class="string">`字段名`</span> 列类型 [属性][索引][注释],</span><br><span class="line">    ....</span><br><span class="line">    <span class="string">`字段名`</span> 列类型 [属性][索引][注释]</span><br><span class="line">)[表类型][字符集设置][注释]</span><br></pre></td></tr></table></figure><ul><li><p>查看创建结构语句</p><blockquote><p>SHOW CREATE DATABASE school    –创建数据库</p><p>SHOW CREATE TABLE student    –创建表</p><p>DESC student    –显示表的结构</p></blockquote></li></ul><h2 id="修改删除表"><a href="#修改删除表" class="headerlink" title="修改删除表"></a>修改删除表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher <span class="keyword">RENAME</span> <span class="keyword">AS</span> teacher1<span class="comment">--修改表名</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher <span class="keyword">ADD</span> age <span class="built_in">INT</span>(<span class="number">11</span>)<span class="comment">--增加字段</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher <span class="keyword">MODIFY</span> age <span class="built_in">VARCHAR</span>(<span class="number">11</span>)<span class="comment">--修改约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher <span class="keyword">CHANGE</span> age age1 <span class="built_in">INT</span>(<span class="number">11</span>)<span class="comment">--字段重命名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher <span class="keyword">DROP</span> age    <span class="comment">--删除字段</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> teacher<span class="comment">--删除表</span></span><br></pre></td></tr></table></figure><h2 id="数据库在物理空间的存储"><a href="#数据库在物理空间的存储" class="headerlink" title="数据库在物理空间的存储"></a>数据库在物理空间的存储</h2><blockquote><p>所有文件都在data目录下，本质还是属于文件的存储</p></blockquote><p>MySQL引擎在物理文件上的区别</p><ul><li>InnoDB在数据库表中只有一个*.frm文件，以及上级目录下的 ibdate1文件</li><li>MyISAM<ul><li>*.frm  - 表结构定义文件</li><li>*.MYD - 数据文件（data）</li><li>*.MYI -  所有文件（index）</li></ul></li></ul><hr><ul><li>关于数据库引擎<ul><li>InnoDB（事务支持，数据行锁定，外键约束，表空间较大约为MYISAM两倍）安全性高，事务的处理，多表多用户操作</li><li>MyISAM（支持全文索引，表空间较小）节约空间，速度较快</li></ul></li></ul><hr><h2 id="MySQL数据管理"><a href="#MySQL数据管理" class="headerlink" title="MySQL数据管理"></a>MySQL数据管理</h2><h3 id="外键（了解即可）"><a href="#外键（了解即可）" class="headerlink" title="外键（了解即可）"></a>外键（了解即可）</h3><blockquote><ol><li><p>在建表时创建外键（不建议）</p></li><li><p>建表后单独创建</p><blockquote><p>alter table 表 add constraint 约束名 foreign key （作为外键的字段）references 另一个表（相应字段）</p></blockquote></li></ol><p>以上都是物理外键，数据库级别，不建议使用</p></blockquote><h3 id="DML语言（记忆）"><a href="#DML语言（记忆）" class="headerlink" title="DML语言（记忆）"></a>DML语言（记忆）</h3><ul><li><p>插入</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`表命`</span>(<span class="string">`字段1`</span>,<span class="string">`字段2`</span>,<span class="string">`字段3`</span>) <span class="keyword">VALUES</span>(<span class="string">&#x27;值1&#x27;</span>),(<span class="string">&#x27;值2&#x27;</span>),(<span class="string">&#x27;值3&#x27;</span>)此处为插入多条数据</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`表命`</span>(<span class="string">`字段1`</span>,<span class="string">`字段2`</span>,<span class="string">`字段3`</span>) </span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;值1&#x27;</span>,<span class="string">&#x27;值2&#x27;</span>,<span class="string">&#x27;值3&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;值4&#x27;</span>,<span class="string">&#x27;值5&#x27;</span>,<span class="string">&#x27;值6&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;值7&#x27;</span>,<span class="string">&#x27;值8&#x27;</span>,<span class="string">&#x27;值9&#x27;</span>)</span><br><span class="line"><span class="comment">--注意对应</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`grade`</span>(<span class="string">`gradename`</span>) <span class="keyword">VALUES</span>(<span class="string">&#x27;大一&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--若不写字段名则需要输入全信息，并且一一对应</span></span><br></pre></td></tr></table></figure></li><li><p>修改</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--修改学生姓名,带条件</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="string">`student`</span> <span class="keyword">SET</span> <span class="string">`name`</span>=<span class="string">&#x27;FeOAr&#x27;</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></li><li><p>删除</p><ul><li><p>DELETE命令</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--delete from 表名 （where 条件），不加条件则全部删除,表结构索引约束不变</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="string">`student`</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><ul><li>delete重启数据库，问题：InnoDB自增列从1开始（存在RAM中，断电即失）</li><li>MyISAM ：继续从上一个量开始（存在文件中，不会丢失）</li></ul></li><li><p>TRUNCATE命令：完全清空一个数据库，表结构索引约束不变</p><ul><li><p>会重置自增列，计数器归零</p></li><li><p>不会影响事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="string">`student`</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h2 id="DQL查询数据"><a href="#DQL查询数据" class="headerlink" title="DQL查询数据"></a>DQL查询数据</h2><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><ul><li><p>Concat(a,b)：</p><blockquote><p>SELECT CONCAT(‘姓名：’,StudentName) AS 姓名 FROM student</p></blockquote></li></ul><p><img src="https://s1.ax1x.com/2020/10/25/Be1n9e.png" alt="运行结果"></p><ul><li><p>Distinct去重</p><blockquote><p>SELECT DISTINCT ‘StudentNo’ FROM result </p></blockquote></li></ul><h4 id="联表查询JoinON详解"><a href="#联表查询JoinON详解" class="headerlink" title="联表查询JoinON详解"></a>联表查询JoinON详解</h4><ul><li>7种Join</li></ul><img src="https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=4057843062,2771292381&fm=26&gp=0.jpg" style="zoom:50%;" /><h4 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h4><h4 id="分页与排序"><a href="#分页与排序" class="headerlink" title="分页与排序"></a>分页与排序</h4><h2 id="MySQL函数"><a href="#MySQL函数" class="headerlink" title="MySQL函数"></a>MySQL函数</h2><ul><li><p>常用函数</p><ul><li><p>数学运算</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">ABS</span>()<span class="comment">--绝对值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CEILING</span>() <span class="comment">--向上取整</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">FLOOR</span>() <span class="comment">--向下取整</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">RAND</span>() <span class="comment">--返回一个0-1之间的随机数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SIGN</span>() <span class="comment">--判断一个数符号，附属返回-1，正数返回1</span></span><br></pre></td></tr></table></figure></li><li><p>字符串函数</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CHAR_LENGTH</span>(<span class="string">&#x27;字符串&#x27;</span>) <span class="comment">--字符串长度</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(<span class="string">&#x27;字符串1&#x27;</span>,<span class="string">&#x27;字符串2&#x27;</span>) <span class="comment">--拼接字符串</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">INSERT</span>() <span class="comment">--查询替换(格式：insert(str,pos,len,newstr))从某个位置开始替换某个长度</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LOWER</span>() <span class="comment">--转小写</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">UPPER</span>() <span class="comment">--转大写</span></span><br><span class="line"><span class="keyword">SELECT</span> INSTRT() <span class="comment">--返回特定字符串第一次出现的位置，格式：instr(str,substr)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">REPLACE</span>() <span class="comment">--替换出现的指定字符串，格式：(字符串，要替换的，替换成的)</span></span><br></pre></td></tr></table></figure></li><li><p>日期和时间</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURRENT_DATE</span>() <span class="comment">--获取当前日期</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURDATE</span>() <span class="comment">--获取当前日期与上相同</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NOW</span>() <span class="comment">--获取当前时间</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LOCALTIME</span>() <span class="comment">--本地时间</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SYSDATE</span>() <span class="comment">--系统时间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(<span class="keyword">NOW</span>())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(<span class="keyword">NOW</span>())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DAY</span>(<span class="keyword">NOW</span>())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">HOUR</span>(<span class="keyword">NOW</span>())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MINUTE</span>(<span class="keyword">NOW</span>())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SECOND</span>(<span class="keyword">NOW</span>())</span><br></pre></td></tr></table></figure></li><li><p>系统</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SYSTEM_USER</span>()</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span>()</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">VERSION</span>()</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>聚合函数</p><table><thead><tr><th>COUNT()</th><th>计数</th></tr></thead><tbody><tr><td>SUN()</td><td>求和</td></tr><tr><td>AVG()</td><td>平均值</td></tr><tr><td>MAX()</td><td>最大值</td></tr><tr><td>MIN()</td><td>最小值</td></tr><tr><td>…</td><td>…</td></tr></tbody></table></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--eg.</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(studentname) <span class="keyword">FROM</span> student;</span><br></pre></td></tr></table></figure><h4 id="聚合函数及分组过滤"><a href="#聚合函数及分组过滤" class="headerlink" title="聚合函数及分组过滤"></a>聚合函数及分组过滤</h4><h4 id="拓展之数据库级别的MD5加密"><a href="#拓展之数据库级别的MD5加密" class="headerlink" title="拓展之数据库级别的MD5加密"></a>拓展之数据库级别的MD5加密</h4><h4 id="select小结"><a href="#select小结" class="headerlink" title="select小结"></a>select小结</h4><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><h4 id="事务ACID原则，脏读，不可重复读，幻读"><a href="#事务ACID原则，脏读，不可重复读，幻读" class="headerlink" title="事务ACID原则，脏读，不可重复读，幻读"></a>事务ACID原则，脏读，不可重复读，幻读</h4><h4 id="测试事务实现转账"><a href="#测试事务实现转账" class="headerlink" title="测试事务实现转账"></a>测试事务实现转账</h4><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h4 id="索引介绍及索引的分类"><a href="#索引介绍及索引的分类" class="headerlink" title="索引介绍及索引的分类"></a>索引介绍及索引的分类</h4><h4 id="索引原则和明日安排"><a href="#索引原则和明日安排" class="headerlink" title="索引原则和明日安排"></a>索引原则和明日安排</h4><h4 id="数据库用户管理"><a href="#数据库用户管理" class="headerlink" title="数据库用户管理"></a>数据库用户管理</h4><h2 id="权限管理与备份"><a href="#权限管理与备份" class="headerlink" title="权限管理与备份"></a>权限管理与备份</h2><h4 id="MySQL备份"><a href="#MySQL备份" class="headerlink" title="MySQL备份"></a>MySQL备份</h4><h4 id="如何设计一个项目的数据库"><a href="#如何设计一个项目的数据库" class="headerlink" title="如何设计一个项目的数据库"></a>如何设计一个项目的数据库</h4><h4 id="数据库三大范式"><a href="#数据库三大范式" class="headerlink" title="数据库三大范式"></a>数据库三大范式</h4><h2 id="数据库驱动和JDBC"><a href="#数据库驱动和JDBC" class="headerlink" title="数据库驱动和JDBC"></a>数据库驱动和JDBC</h2><h3 id="数据库驱动"><a href="#数据库驱动" class="headerlink" title="数据库驱动"></a>数据库驱动</h3><blockquote><p>程序 —&gt;(数据库驱动)—&gt; 数据库</p></blockquote><h3 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h3><blockquote><p>Java操作数据库的规范，对于开发人员掌握JDBC的接口即可，本质就是一套接口</p></blockquote><ul><li>数据库驱动包<ul><li>Java.sql</li><li>Javax.sql</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例</span></span><br><span class="line"><span class="keyword">package</span> base.learnjdbc.first;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcFirst</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//1.加载驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);<span class="comment">//固定写法，加载驱动</span></span><br><span class="line">        <span class="comment">//2.用户信息和url</span></span><br><span class="line">        String url = <span class="string">&quot;jdbc:mysql://localhost:3306/school?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br><span class="line">        String username = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        String password = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">        <span class="comment">//3.连接成功,connection代表数据库</span></span><br><span class="line">        Connection connection = DriverManager.getConnection(url,username,password);</span><br><span class="line">        <span class="comment">//4.执行SQL的对象</span></span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="comment">//5.执行SQL的对象去执行SQL，查看结果</span></span><br><span class="line">        String sql = <span class="string">&quot;SELECT * FROM student&quot;</span>;</span><br><span class="line">        ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>( resultSet.next())&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;studentno&quot;</span>+resultSet.getObject(<span class="string">&quot;studentno&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;loginpwd&quot;</span>+resultSet.getObject(<span class="string">&quot;loginpwd&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;studentname&quot;</span>+resultSet.getObject(<span class="string">&quot;studentname&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;phone&quot;</span>+resultSet.getObject(<span class="string">&quot;phone&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;----------------------------&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//6.释放连接</span></span><br><span class="line"></span><br><span class="line">        resultSet.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Statement对象详解"><a href="#Statement对象详解" class="headerlink" title="Statement对象详解"></a>Statement对象详解</h4><blockquote><p><strong>Jdbc中的statement对象用于向数据库发送SQL语句，想要完成对数据库的增删改查只需要通过这个对象向数据库发送增删改查语句即可。</strong></p></blockquote><ul><li><p>Statement.executeUpdate方法用于向数据库发送增删改查的SQL语句，executeUpdate方法执行完后，将会返回一个整数（即增删改查操作导致有多少行数据发生了变化）</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--增</span></span><br><span class="line">Statement st = conn.createStatement();</span><br><span class="line">String sql = &quot;<span class="keyword">insert</span> <span class="keyword">into</span> student(...)<span class="keyword">values</span>(...)<span class="string">&quot;;</span></span><br><span class="line"><span class="string">int num = st.executeUpdate(sql);</span></span><br><span class="line"><span class="string">if(num&gt;0)&#123;</span></span><br><span class="line"><span class="string">System.out.println(&quot;</span>插入成功！！<span class="string">&quot;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">--删</span></span><br><span class="line"><span class="string">Statement st = conn.createStatement();</span></span><br><span class="line"><span class="string">String sql = &quot;</span><span class="keyword">delete</span> <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span><span class="string">&quot;;</span></span><br><span class="line"><span class="string">int num = st.executeUpdate(sql);</span></span><br><span class="line"><span class="string">if(num&gt;0)&#123;</span></span><br><span class="line"><span class="string">System.out.println(&quot;</span>删除成功！！<span class="string">&quot;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">--改</span></span><br><span class="line"><span class="string">Statement st = conn.createStatement();</span></span><br><span class="line"><span class="string">String sql = &quot;</span><span class="keyword">update</span> student <span class="keyword">set</span> <span class="keyword">name</span>=<span class="string">&#x27;&#x27;</span><span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">&#x27;&#x27;</span><span class="string">&quot;;</span></span><br><span class="line"><span class="string">int num = st.executeUpdate(sql);</span></span><br><span class="line"><span class="string">if(num&gt;0)&#123;</span></span><br><span class="line"><span class="string">System.out.println(&quot;</span>修改成功！！<span class="string">&quot;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">--增</span></span><br><span class="line"><span class="string">Statement st = conn.createStatement();</span></span><br><span class="line"><span class="string">String sql = &quot;</span><span class="keyword">insert</span> <span class="keyword">into</span> student(...)<span class="keyword">values</span>(...)<span class="string">&quot;;</span></span><br><span class="line"><span class="string">int num = st.executeUpdate(sql);</span></span><br><span class="line"><span class="string">if(num&gt;0)&#123;</span></span><br><span class="line"><span class="string">System.out.println(&quot;</span>插入成功！！<span class="string">&quot;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>Statement.executeQuery方法用于向数据库发送查询语句，executeQuery方法返回代表查询结果的ResultSet对象</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--查</span></span><br><span class="line">Statement st = conn.createStatement();</span><br><span class="line">String sql = &quot;<span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span><span class="string">&quot;;</span></span><br><span class="line"><span class="string">ResultSet rs = st.executeQuery(sql);</span></span><br><span class="line"><span class="string">while(rs.nest)&#123;</span></span><br><span class="line"><span class="string">//根据数据类型，分别调用rs的相应方法应涉及到java对象中</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>提取工具类</p>  <figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#db.properties</span></span><br><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/school?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JdbcUtils.java</span></span><br><span class="line"><span class="keyword">package</span> base.learnjdbc.first;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver =<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url =<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username =<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password =<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream in = JdbcUtils.class.getClassLoader().getResourceAsStream(<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(in);</span><br><span class="line"></span><br><span class="line">            driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">            url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            username = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">            password = properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//1.驱动只加载一次</span></span><br><span class="line"></span><br><span class="line">                Class.forName(driver);</span><br><span class="line">            &#125; <span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Connection conn, Statement st, ResultSet rs)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(rs!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                rs.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(st!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    st.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                    throwables.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(conn!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                    throwables.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>测试</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> base.learnjdbc.first;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        Statement st = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection(); <span class="comment">//获取数据库连接</span></span><br><span class="line">            st = conn.createStatement(); <span class="comment">//获得SQl执行对象</span></span><br><span class="line">            <span class="comment">//String sql = &quot;SELECT `phone` FROM student where sex = 0&quot;;</span></span><br><span class="line">            String sql = <span class="string">&quot;INSERT INTO student (studentno,`loginpwd`,`studentname`,`sex`,`gradeid`,`phone`,`address`,`borndate`,`email`,`identitycard`)\n&quot;</span> +</span><br><span class="line">                    <span class="string">&quot;VALUES (1002,&#x27;123456&#x27;,&#x27;zhr&#x27;,&#x27;1&#x27;,&#x27;3&#x27;,&#x27;13379059095&#x27;,&#x27;陕西西安&#x27;,&#x27;1999-11-21&#x27;,&#x27;feoar@outlook.com&#x27;,&#x27;123456198654011234&#x27;)&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> i = st.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;插入成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//            rs = st.executeQuery(sql);    //查询完返回一个结果集</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            while( rs.next())&#123;</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;phone\n&quot;+rs.getObject(&quot;phone&quot;)+&quot;\t&quot;);</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;----------------------------&quot;);</span></span><br><span class="line"><span class="comment">//            &#125;//查询</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            JdbcUtils.release(conn,st,rs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="SQL注入问题"><a href="#SQL注入问题" class="headerlink" title="SQL注入问题"></a>SQL注入问题</h4><blockquote><p>sql存在漏洞会被攻击，数据泄露。<strong>SQL会被拼接</strong> </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//eg.</span></span><br><span class="line"><span class="keyword">package</span> base.learnjdbc.first;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SQLzhuru</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//正常login(&quot;zhr&quot;,&quot;123456&quot;);</span></span><br><span class="line">        login(<span class="string">&quot;&#x27;or&#x27;1=1&quot;</span>,<span class="string">&quot;&#x27;or&#x27;1=1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(String username,String password)</span></span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        Statement st = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection(); <span class="comment">//获取数据库连接</span></span><br><span class="line">            st = conn.createStatement(); <span class="comment">//获得SQl执行对象</span></span><br><span class="line">            <span class="comment">//String sql = &quot;SELECT * FROM student WHERE `studentname` = &#x27;zhr&#x27; AND `loginpwd` = &#x27;123456&#x27;&quot;;</span></span><br><span class="line">            String sql = <span class="string">&quot;SELECT * FROM student WHERE `studentname` = &#x27;&quot;</span>+username+<span class="string">&quot;&#x27; AND `loginpwd` = &#x27;&quot;</span>+password+<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">            rs = st.executeQuery(sql);    <span class="comment">//查询完返回一个结果集</span></span><br><span class="line">            <span class="keyword">while</span>( rs.next())&#123;</span><br><span class="line">                System.out.println(rs.getObject(<span class="string">&quot;studentname&quot;</span>));</span><br><span class="line">                System.out.println(rs.getString(<span class="string">&quot;loginpwd&quot;</span>));</span><br><span class="line">            &#125;<span class="comment">//查询</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            JdbcUtils.release(conn,st,rs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="PreparedStatement对象"><a href="#PreparedStatement对象" class="headerlink" title="PreparedStatement对象"></a>PreparedStatement对象</h4><blockquote><p>PreparedStatement可以防止SQL注入且效率更高</p></blockquote><ul><li>增</li><li>删</li><li>改</li><li>查</li></ul><h4 id="使用IDEA连接数据库"><a href="#使用IDEA连接数据库" class="headerlink" title="使用IDEA连接数据库"></a>使用IDEA连接数据库</h4><h4 id="JDBC操作事务"><a href="#JDBC操作事务" class="headerlink" title="JDBC操作事务"></a>JDBC操作事务</h4><h4 id="DBCP-C3P0连接池"><a href="#DBCP-C3P0连接池" class="headerlink" title="DBCP-C3P0连接池"></a>DBCP-C3P0连接池</h4><p>起因：数据库连接–执行完毕–释放，过程十分浪费资源</p><blockquote><p>池化技术：准备一些预先资源，直接连接准备好的</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MySQL简略笔记&quot;&gt;&lt;a href=&quot;#MySQL简略笔记&quot; class=&quot;headerlink&quot; title=&quot;MySQL简略笔记&quot;&gt;&lt;/a&gt;MySQL简略笔记&lt;/h1&gt;&lt;h2 id=&quot;基本&quot;&gt;&lt;a href=&quot;#基本&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
    <category term="基础学习" scheme="https://github.com/FeOAr/FeOAr.github.io.git/tags/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/FeOAr/FeOAr.github.io.git/2020/10/21/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%AD_2/"/>
    <id>https://github.com/FeOAr/FeOAr.github.io.git/2020/10/21/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%AD_2/</id>
    <published>2020-10-21T11:43:59.417Z</published>
    <updated>2020-10-21T11:43:59.417Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目实训"><a href="#项目实训" class="headerlink" title="项目实训"></a>项目实训</h1><h2 id="day-2"><a href="#day-2" class="headerlink" title="day_2"></a>day_2</h2><ul><li><p>Qt 布局系统介绍<br>布局系统<br>在Qt中,系统提供了强大的排版机制来为窗口中的视图进行布局排版,经过了对Qt布局一个初步的探索,不得不对 Qt布局系统的简洁高效而又功能强大表示赞叹.</p></li><li><p>布局系统的功能</p><p>  在QT中，布局系统可以完成：</p><pre><code>  &gt;定位子控件  &gt;得知窗体默认大小  &gt;得知窗体最小大小  &gt;窗体大小变化时进行布局排版  &gt;内容改变(字体大小文本等，隐藏或者显示，移除)时进行布局排版</code></pre></li><li><p>布局系统的结构</p><pre><code>QT提供了QLayout类及其子类来为界面进行排版布局，结构如下:</code></pre><p>  QObject            QLayoutItem</p><pre><code>  |                |  --------|--------          |        QLayout            |  --------|---------------|---------------|  |        |                |                |</code></pre><p>  QBoxLayout    QFormLayout        QGridLayout        QStackedLayout</p><pre><code>  |  |--------QHBoxLayout  |  |--------QVBoxLayout</code></pre></li><li><p>QLayout是布局系统中的抽象基类，集成自QObject和QLayoutItem,其中四个子类分别为：</p><pre><code>QBoxLayout(箱式布局)QFormLayout(表单式布局)QGridLayout(网格布局)QStackedLayout(栈布局)</code></pre><p>  在真实场景中，往往需要通过多种布局的相结合来完成界面的设计。</p></li><li><p>QBoxLayout箱式布局</p><pre><code>箱式布局提供了两个子类分别处理水平(QHBoxLayout)和垂直(QVBoxLayout)两个方向的排版。可以使视图排成一行或者一列来显示，简单说，就是可以让控件进行排排站例如：</code></pre></li><li><p>QFormLayout表单布局</p></li><li><p>QGridLayout栅格化布局</p></li></ul><p>项目例子：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> WIDGET_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WIDGET_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QPushButton&gt;//按钮类的头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QHBoxLayout&gt;//水平箱式布局的头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QVBoxLayout&gt;//垂直箱式布局的头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QLabel&gt;//标签类的头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget</span> :</span> <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Widget(QWidget *parent = <span class="number">0</span>);</span><br><span class="line">    ~Widget();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*定义4个button控件*/</span></span><br><span class="line">    QPushButton *bnt1;</span><br><span class="line">    QPushButton *bnt2;</span><br><span class="line">    QPushButton *bnt3;</span><br><span class="line">    QPushButton *bnt4;</span><br><span class="line">    <span class="comment">/*定义一个水平箱式布局*/</span></span><br><span class="line">    QHBoxLayout *hb;</span><br><span class="line">    <span class="comment">/*定义一个垂直箱式布局*/</span></span><br><span class="line">    QVBoxLayout *vb;</span><br><span class="line">    <span class="comment">/*定义一个用来显示图片的label*/</span></span><br><span class="line">    QLabel *lb;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*声明槽函数*/</span></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line"><span class="comment">/*想让bnt1被点击时触发*/</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">bnt1_show</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// WIDGET_H</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//==============================================================================</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;widget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Widget::Widget(QWidget *parent)</span><br><span class="line">    : QWidget(parent)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*实例化控件*/</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;bnt1 = <span class="keyword">new</span> QPushButton(tr(<span class="string">&quot;特没谱&quot;</span>));</span><br><span class="line">    <span class="keyword">this</span>-&gt;bnt2 = <span class="keyword">new</span> QPushButton(tr(<span class="string">&quot;铁臂阿童木&quot;</span>));</span><br><span class="line">    <span class="keyword">this</span>-&gt;bnt3 = <span class="keyword">new</span> QPushButton(tr(<span class="string">&quot;皮卡丘&quot;</span>));</span><br><span class="line">    <span class="keyword">this</span>-&gt;bnt4 = <span class="keyword">new</span> QPushButton(tr(<span class="string">&quot;佐助&quot;</span>));</span><br><span class="line">    <span class="keyword">this</span>-&gt;lb = <span class="keyword">new</span> QLabel(<span class="string">&quot;图片显示区域...&quot;</span>);</span><br><span class="line">    <span class="comment">/*设置label的大小*/</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;lb-&gt;setBaseSize(<span class="number">500</span>,<span class="number">600</span>);</span><br><span class="line"><span class="comment">/*将bnt1和bnt2放入水平箱式布局中*/</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;hb = <span class="keyword">new</span> QHBoxLayout();</span><br><span class="line">    <span class="keyword">this</span>-&gt;hb-&gt;addWidget(<span class="keyword">this</span>-&gt;bnt1);</span><br><span class="line">    <span class="keyword">this</span>-&gt;hb-&gt;addWidget(<span class="keyword">this</span>-&gt;bnt2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*将水平箱式布局放入一个垂直箱式布局中*/</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;vb = <span class="keyword">new</span> QVBoxLayout();</span><br><span class="line">    <span class="keyword">this</span>-&gt;vb-&gt;addLayout(<span class="keyword">this</span>-&gt;hb);、</span><br><span class="line">    <span class="comment">/*将bnt3、bnt4和lb放入垂直箱式布局中*/</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;vb-&gt;addWidget(<span class="keyword">this</span>-&gt;bnt3);</span><br><span class="line">    <span class="keyword">this</span>-&gt;vb-&gt;addWidget(<span class="keyword">this</span>-&gt;bnt4);</span><br><span class="line">    <span class="keyword">this</span>-&gt;vb-&gt;addWidget(<span class="keyword">this</span>-&gt;lb);</span><br><span class="line">    <span class="comment">//this-&gt;setLayout(this-&gt;hb);</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*将垂直箱式布局放入页面中*/</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;setLayout(<span class="keyword">this</span>-&gt;vb);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     *关联bnt1的点击信号和当前页面的bnt1_show()槽函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    connect(<span class="keyword">this</span>-&gt;bnt1, SIGNAL(clicked()), <span class="keyword">this</span>, SLOT(bnt1_show()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~Widget()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义槽函数，即槽函数的实现*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Widget::bnt1_show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*构造一个img对象*/</span></span><br><span class="line">    QImage *img = <span class="keyword">new</span> QImage;</span><br><span class="line">    <span class="comment">/*让img对象加载指定图片*/</span></span><br><span class="line">    img-&gt;load(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\qtpro\\day2\\day2_1\\pic\\1.jpg&quot;</span>);</span><br><span class="line">    <span class="comment">/*显示图片*/</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;lb-&gt;setPixmap(QPixmap::fromImage(*img));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>connect：</p><pre><code>有四个参数：    第一个参数:发信号的实例/对象    第二个参数:发送的信号    第三个参数:被触发槽函数类的对象    第四个参数:被触发对象哪一个槽函数</code></pre></li><li><p>button显示Icon</p><pre><code>QPushButton：    void    setIcon(const QIcon &amp; icon)：可以设置Button的图标    void    setIconSize(const QSize &amp; size)：可以设置Button图标的大小    void    setStyleSheet(const QString &amp; styleSheet):设置button的样式                设置边框的样式格式为：                    &quot;border:3px solid red&quot;                            粗               颜色                            以像素为单位    颜色对应的英文单词QIcon：图标类        QIcon(const QString &amp; fileName)：由一个图片文件名构造一个QIconQSize：大小类        QSize::QSize(int width, int height)：通过一个宽度和高度来构造一个QSize</code></pre></li><li><p>定时器：</p><pre><code>QTimer类：    void QTimer::start(int msec)：多长时间定时器会重置/超时    void QTimer::timeout()：当start中时间一到，QTimer会自动发送一个timeout信号    void QTimer::stop()：关掉定时器</code></pre></li><li><p>qrand():用来生成随机数。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;项目实训&quot;&gt;&lt;a href=&quot;#项目实训&quot; class=&quot;headerlink&quot; title=&quot;项目实训&quot;&gt;&lt;/a&gt;项目实训&lt;/h1&gt;&lt;h2 id=&quot;day-2&quot;&gt;&lt;a href=&quot;#day-2&quot; class=&quot;headerlink&quot; title=&quot;day_2&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>常用命令</title>
    <link href="https://github.com/FeOAr/FeOAr.github.io.git/2020/10/13/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    <id>https://github.com/FeOAr/FeOAr.github.io.git/2020/10/13/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C/</id>
    <published>2020-10-12T16:00:00.000Z</published>
    <updated>2020-10-13T05:21:19.489Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><ol><li><p>盘符切换</p><blockquote><p>E:</p></blockquote></li><li><p>查看当前目录下所有文件</p><blockquote><p>dir</p></blockquote></li><li><p>切换目录</p><blockquote><p>cd (change directory)</p><ul><li>cd /d E:\file    (其中 /d 为跨盘符指令)</li><li>cd ..（返回上级）</li></ul></blockquote></li><li><p>清理屏幕</p><blockquote><p>cls（clean screen）</p></blockquote></li><li><p>退出</p><blockquote><p>exit</p></blockquote></li><li><p>查看IP</p><blockquote><p>ipconfig</p></blockquote></li><li><p>打开计算器</p><blockquote><p>calc</p></blockquote></li><li><p>记事本</p><blockquote><p>notepad</p></blockquote></li><li><p>ping</p><blockquote><p>ping <a href="http://www.bilibili.com/">www.bilibili.com</a></p></blockquote></li><li><p>创建文件夹</p><blockquote><p>md test</p></blockquote></li><li><p>新建文件</p><blockquote><p>cd&gt;a.txt</p></blockquote></li><li><p>删除</p><blockquote><p>del a.txt</p></blockquote></li><li><p>删除目录</p><blockquote><p>rd test</p></blockquote></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;盘符切换&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;E:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;</summary>
      
    
    
    
    
    <category term="基础学习" scheme="https://github.com/FeOAr/FeOAr.github.io.git/tags/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>稀疏数组</title>
    <link href="https://github.com/FeOAr/FeOAr.github.io.git/2020/10/10/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/"/>
    <id>https://github.com/FeOAr/FeOAr.github.io.git/2020/10/10/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/</id>
    <published>2020-10-09T16:00:00.000Z</published>
    <updated>2020-10-10T14:00:50.625Z</updated>
    
    <content type="html"><![CDATA[<h1 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h1><blockquote><ul><li>当一个数组中大部分元素为0，或者为同一值的数组时，可以使用吸收叔叔组来保存该数组。</li><li>稀疏数组的处理方式时：<ul><li>记录数组一共有几行几列，有多少个不同的值</li><li>八级有不同值的元素和行列及值记录在一个小规模数组中，从而缩小程序规模</li></ul></li><li>如图，左边为原始数组，右边为稀疏数组</li></ul></blockquote><img src="https://s1.ax1x.com/2020/10/10/0yyhz4.png" style="zoom: 67%;" /><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Base.First.Demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">xishushuzu</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个11*11的二维数组</span></span><br><span class="line">        <span class="comment">//0：没有棋子，1：黑棋，2：白棋</span></span><br><span class="line">        <span class="keyword">int</span>[][] array1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">        array1[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        array1[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line">        <span class="comment">//输出原始数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;输出原始数组&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span>[] ints : array1)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> anInt : ints)&#123;</span><br><span class="line">                System.out.print(anInt + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//转换为稀疏数组</span></span><br><span class="line">        <span class="comment">//获取有效值的个数</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">11</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>((array1[i][j]) != <span class="number">0</span>) sum++;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;--------------分割线----------------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;有效值的个数= &quot;</span> + sum);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个稀疏数组对应的数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] array2 = <span class="keyword">new</span> <span class="keyword">int</span>[sum+<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        array2[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">        array2[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">        array2[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历二维数组，将非零值存入数组</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array1[i].length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(array1[i][j] != <span class="number">0</span>)&#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    array2[count][<span class="number">0</span>] = i;</span><br><span class="line">                    array2[count][<span class="number">1</span>] = i;</span><br><span class="line">                    array2[count][<span class="number">2</span>] = array1[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出稀疏数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;输出稀疏数组&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array2.length; i++) &#123;</span><br><span class="line">            System.out.println(array2[i][<span class="number">0</span>] + <span class="string">&quot;\t&quot;</span></span><br><span class="line">                    +array2[i][<span class="number">1</span>]+ <span class="string">&quot;\t&quot;</span></span><br><span class="line">                    +array2[i][<span class="number">2</span>]+ <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;--------------分割线----------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//还原稀疏数组，1，读取稀疏数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] array3 = <span class="keyword">new</span> <span class="keyword">int</span>[array2[<span class="number">0</span>][<span class="number">0</span>]][array2[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给其中的元素还原其值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; array2.length; i++) &#123;</span><br><span class="line">            array3[array2[i][<span class="number">0</span>]][array2[i][<span class="number">1</span>]] = array2[i][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        System.out.println(<span class="string">&quot;还原的数组&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] ints: array3) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> anInt : ints)&#123;</span><br><span class="line">                System.out.print(anInt + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/10/10/0y6Jl4.png" alt="运行结果"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;稀疏数组&quot;&gt;&lt;a href=&quot;#稀疏数组&quot; class=&quot;headerlink&quot; title=&quot;稀疏数组&quot;&gt;&lt;/a&gt;稀疏数组&lt;/h1&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;当一个数组中大部分元素为0，或者为同一值的数组时，可以使用吸收叔叔组来保存该数组。&lt;/</summary>
      
    
    
    
    
    <category term="基础学习" scheme="https://github.com/FeOAr/FeOAr.github.io.git/tags/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java学习</title>
    <link href="https://github.com/FeOAr/FeOAr.github.io.git/2020/10/08/Java%E5%AD%A6%E4%B9%A0pro%E7%89%88/"/>
    <id>https://github.com/FeOAr/FeOAr.github.io.git/2020/10/08/Java%E5%AD%A6%E4%B9%A0pro%E7%89%88/</id>
    <published>2020-10-07T16:00:00.000Z</published>
    <updated>2020-10-27T13:34:03.601Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java基础语法"><a href="#Java基础语法" class="headerlink" title="Java基础语法"></a>Java基础语法</h1><h2 id="注释，标识符，关键字"><a href="#注释，标识符，关键字" class="headerlink" title="注释，标识符，关键字"></a>注释，标识符，关键字</h2><h3 id="Java注释"><a href="#Java注释" class="headerlink" title="Java注释"></a>Java注释</h3><ul><li><p>单行注释</p></li><li><p>多行注释</p></li><li><p>文档注释</p><p><img src="https://s1.ax1x.com/2020/10/08/0wYo8g.png"></p></li></ul><h3 id="Java标识符"><a href="#Java标识符" class="headerlink" title="Java标识符"></a>Java标识符</h3><h4 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h4><img src="https://s1.ax1x.com/2020/10/08/0wY7vj.png" style="zoom:50%;" /><h4 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h4><blockquote><p>类名，变量名，方法名都称为标识符。</p></blockquote><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><blockquote><p><strong>强类型语言</strong></p></blockquote><ul><li>Java数据类型有两类<ul><li>基本类型（primitive type）</li><li>引用类型（reference type）</li></ul></li></ul><img src="https://s1.ax1x.com/2020/10/08/0wYbKs.png" style="zoom: 50%;" /><ol><li><p>boolean    (true/false&lt;—defaule)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br></pre></td></tr></table></figure></li><li><p>byte          (节约空间)</p></li><li><p>short / int / long       </p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//eg.</span></span><br><span class="line"><span class="keyword">long</span> c1 = <span class="number">100324532456L</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//进制拓展 二进制0b 八进制0 十进制 十六进制0x</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> i2 = <span class="number">010</span>;   <span class="comment">//八进制</span></span><br><span class="line"><span class="keyword">int</span> i3 = <span class="number">0x10</span>;  <span class="comment">//十六进制</span></span><br><span class="line">System.out.println(i);</span><br><span class="line">System.out.println(i2);</span><br><span class="line">System.out.println(i3);</span><br><span class="line"></span><br><span class="line"><span class="comment">//JDK7以后，数字之间可以加下划线分割</span></span><br><span class="line"><span class="keyword">int</span> money = <span class="number">10_0000_0000</span>;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> b = a * money;</span><br><span class="line"><span class="comment">//b会溢出解决方法 -&gt; long b = a * (long)money;或 int money = 10_0000_0000L;P.S. &#x27;L&#x27;一般大写</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="4"><li>float / double</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> f1 = <span class="number">1.23f</span></span><br><span class="line"><span class="keyword">double</span> d1 = <span class="number">4.457d</span></span><br><span class="line"><span class="comment">// 浮点数有损失，可以尝试使用BigDecimal 数学工具类</span></span><br></pre></td></tr></table></figure><ol start="5"><li><p>char    ( \u0000 - \uffff   ||    Unicode编码 2字节  ||    String属于类)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c3 = <span class="string">&#x27;\u0061&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><p>整数数拓展</p></li><li><p>浮点数拓展</p></li><li><p>字符拓展</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String s;</span><br><span class="line">s.equals(<span class="string">&quot;hello&quot;</span>);<span class="comment">//判断字符串s和hello是否相等</span></span><br></pre></td></tr></table></figure></li><li><p>强制转换</p><blockquote><p> （类型）变量名</p></blockquote></li><li><p>转义字符</p></li></ul></li></ol><blockquote><ul><li>基本类型（一种变量）—-&gt;  结构体  （多种变量捆绑）   —-&gt;  类（多种变量 + 方法）</li></ul></blockquote><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><blockquote><p>低 ——–（自动）———–&gt; 高（字节）</p><p>​     &lt;——–（强制）———– </p><p>byte, short, char —&gt; int —&gt; long —&gt; float —&gt; double (小数优先级大于整数)</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.不能转换布尔值</span></span><br><span class="line"><span class="comment">2.不能将对象类型转换为不相干的类型</span></span><br><span class="line"><span class="comment">3.高容量转低容量时，强制转换</span></span><br><span class="line"><span class="comment">4.转换时可能存在内存溢出或精度问题</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="变量常量"><a href="#变量常量" class="headerlink" title="变量常量"></a>变量常量</h2><p>==不建议一行定义多个变量==</p><blockquote><ul><li><p>类变量</p></li><li><p>实例变量</p></li><li><p>局部变量</p></li></ul></blockquote><ul><li>类成员变量：首字母小写和驼峰原则</li><li>局部变量：首字母小写和驼峰原则</li><li>常量 (final) ：大写字母和下划线</li><li>类名：首字母小写和驼峰原则</li><li>方法名：首字母小写和驼峰原则</li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><img src="https://s1.ax1x.com/2020/10/08/0wYT2Q.png" alt="运算符" style="zoom: 50%;" /><h2 id="包机制，JavaDoc"><a href="#包机制，JavaDoc" class="headerlink" title="包机制，JavaDoc"></a>包机制，JavaDoc</h2><h4 id="包机制"><a href="#包机制" class="headerlink" title="包机制"></a>包机制</h4><blockquote><p>package pk1[. pkg2[. pkg3…….]]</p></blockquote><p>eg. com.baidu.www    ———&gt;    com\baidu\www</p><blockquote><p>import package1[.package2….].(classname|*);</p></blockquote><p>eg. import com. baidu. www. *;</p><hr><h4 id="JavaDoc"><a href="#JavaDoc" class="headerlink" title="JavaDoc"></a>JavaDoc</h4><blockquote><p>JavaDoc命令是用来生成自己的API文档</p><blockquote><p>API: API（Application Programming Interface，应用程序接口）是一些预先定义的函数，或指软件系统不同组成部分衔接的约定。 [1]  用来提供应用程序与开发人员基于某软件或硬件得以访问的一组例程，而又无需访问源码，或理解内部工作机制的细节。</p></blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//eg.</span></span><br><span class="line"><span class="keyword">package</span> Base.First.Demo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhr</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(String name)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/10/08/0wYqrn.png" alt="doc"></p><p><img src="https://s1.ax1x.com/2020/10/08/0wYIPS.png" alt="参数信息"></p><hr><h1 id="Java流程控制"><a href="#Java流程控制" class="headerlink" title="Java流程控制"></a>Java流程控制</h1><h2 id="用户交互Scanner"><a href="#用户交互Scanner" class="headerlink" title="用户交互Scanner"></a>用户交互Scanner</h2><blockquote><p>Scanner s = new Scanner(System.in);</p></blockquote><ul><li>通过Scanner类的next() 与 nextLine() 方法获取输入字符串，在读取前一般使用hasNext() 与hasNextLine()判断是或否还有输入的数据。</li></ul><img src="https://s1.ax1x.com/2020/10/08/0wYLbq.png" alt="next与nextLine" style="zoom: 50%;" /><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Base.First.Demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Scanne</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个扫描器对象，用于接收键盘数据</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//判断用户有没有输入字符串</span></span><br><span class="line">        System.out.println(<span class="string">&quot;INPUT by next:&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNext())&#123;</span><br><span class="line">            <span class="comment">//使用next方式接收</span></span><br><span class="line">            String str = scanner.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;OUTPUT:&quot;</span> + str);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//凡是属于IO流的类如果不关闭会一直占用资源</span></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h2><h2 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h2><ol><li><p>if</p></li><li><p>switch</p><blockquote><p>switch语句中变量类型可以是byte, short, int, char, String(from Java SE 7)</p><blockquote><p>switch中string 通过哈希值来匹配</p></blockquote></blockquote></li></ol><h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><p>==尽量避免死循环==</p><ol><li><p>while</p><blockquote><ul><li>while(为假跳出){    }</li><li>先判断后执行</li></ul></blockquote></li><li><p>do…while</p><blockquote><ul><li>对比while，至少执行一次</li><li>先执行后判断</li></ul></blockquote></li><li><p>for</p><blockquote><ul><li>是支持迭代的一种通用结构，是最有效最灵活的循环结构，执行次数在执行前就已确定。</li></ul></blockquote><ul><li><p>Idea_Tips: 100.for</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i1 = <span class="number">0</span>; i1 &lt; <span class="number">100</span>; i1++) &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>遍历数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] number = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> x:number)&#123;</span><br><span class="line">           System.out.println(x);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="break-amp-continue"><a href="#break-amp-continue" class="headerlink" title="break &amp; continue"></a>break &amp; continue</h2><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><h1 id="Java方法"><a href="#Java方法" class="headerlink" title="Java方法"></a>Java方法</h1><h2 id="什么是方法"><a href="#什么是方法" class="headerlink" title="什么是方法"></a>什么是方法</h2><blockquote><ul><li>Java方法是解决一类问题的步骤的有序组合，方法包含于类或对象中，方法在程序中被创建，在其他地方被引用。</li><li>建议保证方法的原子性（一个函数，一个功能）</li><li>尽量保证main();的整洁干净</li></ul></blockquote><h2 id="方法的定义以及调用"><a href="#方法的定义以及调用" class="headerlink" title="方法的定义以及调用"></a>方法的定义以及调用</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><ul><li>方法即函数，是一段<strong>用来完成特定功能的代码片段</strong>，一般情况下定义一个方法包含：<ol><li>修饰符：可选</li><li>返回值类型</li><li>方法名</li><li>参数类型</li><li>方法体</li></ol></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">修饰符 返回值类型 方法名（参数类型 参数名）&#123;</span><br><span class="line">    ...</span><br><span class="line">    方法体</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h3><blockquote><ul><li>对象名.方法名（实参列表）</li><li>Java属于值传递（值传递 /  引用传递）</li></ul></blockquote><h2 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h2><blockquote><p>重载就是在一个类中，有相同的函数名称，但形参不同的函数，返回类型无所谓</p></blockquote><h2 id="令行传参"><a href="#令行传参" class="headerlink" title="令行传参"></a>令行传参</h2><blockquote><p>src目录下，Java 包名 + 文件名</p></blockquote><h2 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h2><blockquote><ul><li>Java1.5开始支持传递同类型的可变参数给一个方法</li><li>在方法声明名中，在指定参数类型后加一个省略号”…”</li><li>一个方法中只能指定一个可变参数，且必须是最后一个参数。任何普通参数都必须在其之前声明。</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span>... i)</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><img src="https://s1.ax1x.com/2020/10/08/0wYjaV.png" alt="递归" style="zoom: 50%;" /><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Base.First.Demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">digui</span> </span>&#123;</span><br><span class="line">    <span class="comment">//阶乘</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(f(<span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> n*f(n-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>都是栈机制，避免太深的递归</p></blockquote><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="什么是数组"><a href="#什么是数组" class="headerlink" title="什么是数组"></a>什么是数组</h2><img src="https://s1.ax1x.com/2020/10/08/0wtp24.png" alt="特点" style="zoom:67%;" /><h2 id="数组声明创建"><a href="#数组声明创建" class="headerlink" title="数组声明创建"></a>数组声明创建</h2><blockquote><ul><li>dataType[] arrayRefVar;    或    dataType arrayRefVar[]; ( 效果相同不推荐 )</li><li>语法：dataType[] arrayRefVar = new dataType[arraySize];</li><li>获取数组长度： arrays.length</li></ul></blockquote><img src="https://s1.ax1x.com/2020/10/08/0wYzPU.png" alt="初始化" style="zoom:67%;" /><h2 id="数组使用及内存分析"><a href="#数组使用及内存分析" class="headerlink" title="数组使用及内存分析"></a>数组使用及内存分析</h2><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li><p>For - Each循环</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> []a=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> b:a)</span><br><span class="line">&#123;</span><br><span class="line">    System.out.println(b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>数组做方法入参</p></li><li><p>数组做返回值</p></li><li><p>数组变量赋值后管理同一个数组。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> []a=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line"><span class="keyword">int</span> []b=a;<span class="comment">//修改b，a也改变</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>静态初始化：创建+赋值</p></blockquote><img src="https://s1.ax1x.com/2020/10/08/0wYv5T.png" alt="内存分析" style="zoom:67%;" /><h2 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h2><h2 id="Arrays类"><a href="#Arrays类" class="headerlink" title="Arrays类"></a>Arrays类</h2><ul><li>数组的工具类java.util.Arrays，帮助对数组进行一些基本操作</li><li>Arrays类中的方法都是static修饰的静态方法，在使用时可以直接使用类名进行调用，”不强制用”使用对象来调用</li><li>常用方法：<ol><li>给数组赋值：fill</li><li>给数组排序：sort，升序</li><li>比较数组：通过equals比较数组中元素值是否相等</li><li>查找数组元素：通过binarySearch方法能对排序好的数组二分法查找操作</li></ol></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//示例</span></span><br><span class="line"><span class="keyword">package</span> Base.First.Demo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">digui</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> []a=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h2><p>（具体参考该篇博客笔记）</p><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="面向对象-1"><a href="#面向对象-1" class="headerlink" title="面向对象"></a>面向对象</h2><ul><li>面向过程<ul><li>步骤清晰简单，适合处理简单问题</li></ul></li><li>面向过程<ul><li>物以类聚，<strong>分类</strong> 的思维模式，解决问题前先对问题进行细分为类，对每个分类单独思考，再在单独分类下进行面向过程的思考。</li><li>适合处理复杂问题</li></ul></li><li><strong>对于描述复杂的事物，为了从宏观上把握，从整体上分析，我们需要使用面向对象的思路来分析整个系统。但是，具体的微观操作，仍需要面向过程的思路处理。</strong></li></ul><blockquote><p>面向对象编程的本质就是：<strong>以类的方式组织代码，以对象的方式组织（封装）数据。</strong></p></blockquote><ul><li>抽象</li><li>三大特性：<strong>封装，继承，多态</strong></li><li>对象是类的具体表现</li><li>在程序中，先有类后有对象</li></ul><hr><h2 id="方法（定义，调用）"><a href="#方法（定义，调用）" class="headerlink" title="方法（定义，调用）"></a>方法（定义，调用）</h2><ul><li>静态方法，可以直接通过（类名.函数名）调用</li><li>非静态方法，必须将类实例化，（对象名.函数名）调用</li><li>形参实参</li><li>值传递与引用传递</li><li>this关键字</li></ul><h3 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h3><ol><li>使用new关键字本质是在调用构造函数（构造器）</li><li>用来初始化值</li><li>IDEA中（ALT + INSERT）自动生成构造器</li><li>注意：定义有参构造函数后若要使用无参构造函数必须显示的（专门写一个无参构造函数）定义一个无参构造函数</li><li>this. (此处this一般指当前类) =  （传入值）</li></ol><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><blockquote><ul><li>属性私有，<strong>get / set</strong></li><li>高内聚，低耦合（类的内部数据操作细节自己完成，仅暴露少量的方法给外部使用）</li></ul></blockquote><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><blockquote><ul><li><strong>extands</strong> 意思是“扩展”，子类是父类的扩展，派生类为基类的扩展</li><li>继承是类之间的一种关系，除此之外还有以来，组合，聚合等</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//eg.</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><ul><li><p>子类可以继承父类的所有方法（公有继承）,私有属性无法继承</p></li><li><p>Tips：CTRL + H 在IDEA中打开继承树</p></li><li><p>Java中所有类都默认直接或间接继承Object类，（祖宗类）</p></li><li><p>Java 每个类只能继承一个类（单根继承原则）</p></li><li><p>若不写<strong>extends</strong> , Java都默认继承 <em>Java.lang.Object</em> 类</p></li><li><p>super(); 先调用父类的无参构造函数再调用自己的无参构造函数。</p><ul><li>必须只能出现在子类的方法或构造函数中</li><li>super与this不能同时调用构造方法</li><li>super(一个形参); 先调用父类的一参构造函数再调用自己的一参构造函数。</li><li>。。。</li></ul></li><li><p>父类没有无参构造函数则子类也没有</p></li></ul><h2 id="重写（override）"><a href="#重写（override）" class="headerlink" title="重写（override）"></a>重写（override）</h2><ul><li>重写都是方法的重写，与属性无关</li><li>重写在子父类之间，定义必须相同，方法体不同；重载在一个类中</li><li>修饰符范围可以扩大但不能缩小（public &gt; protected &gt; default &gt; private）</li><li>抛出异常：范围可以缩小但不能扩大；eg. ClassNotFoundException -&gt; Exception(大)</li><li>静态方法与非静态方法<ul><li>静态方法：方法的调用只和左边定义的数据类型有关，对象能执行哪些方法，主要看对象左边的类型与右边关系不大</li><li>非静态：重写</li></ul></li></ul><h2 id="多态"><a href="#多态" class="headerlink" title="多态*"></a>多态*</h2><blockquote><p>同一个方法可以根据发送对象的不同而采取多种不同的行为方式</p></blockquote><ul><li>多态是方法的多态，属性没有多态</li><li>一个对象的实际类型是确定的，但可以指向对象的引用的类型有很多</li><li>存在的条件：继承关系，子类重写父类的方法，父类引用指向子类对象。Father f1 = new Son();<ul><li>Tips : static方法属于类，不属于实例</li><li>final : 常量</li><li>private方法</li></ul></li></ul><blockquote><p>类型转换带来的作用就是多态</p></blockquote><ul><li><p>子类继承父类所有的方法，但是子类可以重新定义一个名字，参数和父类一样的方法，该行为叫重写（覆写，覆盖，overwrite / override , not overload(重载)）</p></li><li><p>子类方法优先级高于父类</p></li><li><p>多态的作用</p><ul><li>以统一的接口来操纵某一类中不同对象的动态行为</li><li>对象之间的解耦</li></ul></li><li><p><strong>Instanceof</strong>  判断一个对象是什么类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> result = obj <span class="keyword">instanceof</span> Class </span><br><span class="line">    <span class="comment">//obj 为一个对象，Class 表示一个类或者一个接口当 obj 为 Class 的对象，或者是其直接或间接子类，或者是其接口的实现类，结果result 都返回 true，否则返回false。</span></span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/ysocean/p/8486500.html">具体参考</a></p></li></ul><h2 id="类转型"><a href="#类转型" class="headerlink" title="类转型"></a>类转型</h2><blockquote><p>类型可以相互转型，但是只限制于有继承关系的类。</p><ul><li>子类可以单向转化为父类（由大到小，向上转型）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Human obj1 = <span class="keyword">new</span> Man();<span class="comment">//Man extends Human</span></span><br></pre></td></tr></table></figure></blockquote><ul><li>父类转为子类只有一种情况即该父类本身就从子类转化而来。</li></ul><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><ul><li>属性，类中只有一个，所有对象共同访问</li><li>方法，非静态方法可以直接调用静态方法，反之不行。因为static方法同类一起加载顺序在非静态之前</li><li>非静态需要用对象访问，静态可以直接类名访问，一般建议类名访问，方便看出为静态</li><li>static 静态的，Java中特殊的关键字（内存里只有一块）<ul><li>可以作用在<ul><li>变量，方法，类，匿名方法块</li></ul></li></ul></li><li>static块，只执行一次，执行顺序：static块 &gt; 匿名块 &gt; </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    System.out.print(<span class="string">&quot;代码块&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">static</span></span><br><span class="line">&#123;</span><br><span class="line">    System.out.print(<span class="string">&quot;静态代码块&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>静态导入包</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.random</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">System.out.print(random());<span class="comment">//此处random函数如果没有导入，形式为Math.random()</span></span><br></pre></td></tr></table></figure><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><blockquote><ul><li>函数缺少函数体，该类需定义为抽象类。</li><li>关键字 <strong>abstract</strong></li></ul></blockquote><ul><li>可以用来修饰方法也可以用来修饰类，可以得到抽象方法，抽象类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//示例</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> area;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">calRrea</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//抽象方法（函数），有一个就属于抽象类，具体类不加 abstract</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>抽象类无法 new创建对象，它是用来让子类继承的</li><li>抽象方法，只有方法的声明，没有方法的实现，它是用来让子类实现的</li><li>抽象类也是类</li><li>抽象类中可以没有抽象方法，但由抽象方法的类一定要声明为抽象类</li><li>子类可以继承于抽象类，但一定要实现父类<strong>所有 abstract 的方法</strong>。若无法完全实现，子类也必须被定义为抽象类，只有实现父类所有 abstract 的方法才可变为完整类。</li></ul><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><blockquote><ul><li>如果所有方法都未实现，此类算是 <em>接口</em> </li><li>关键字 interface</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//示例</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">name</span><span class="params">(String n)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>普通类：只有具体实现</p></li><li><p>抽象类：具体实现和规范（抽象方法）都有</p></li><li><p>接口：只有规范接口本质是契约</p></li><li><p>类只可以继承一个类但可实现多个接口，继承（<em>extends</em>）与实现可以同时进行（弥补单根继承的不足）</p></li><li><p>实现（<em>implements</em>）一个接口必须实现所有的 <em>abstract</em> 方法</p></li><li><p>接口可继承多个接口</p></li><li><p>抽象类有构造函数，接口没有</p></li><li><p>抽象类可以有main，可运行，接口没有main</p></li><li><p>抽象类方法可以是private/protected，接口都是 public</p></li><li><p>接口作用</p><blockquote><ol><li>约束</li><li>定义方法，让不同人实现</li><li>public abstract</li><li>public static final</li><li>接口不能被实例化，接口中没有构造方法</li><li>implements可以实现多个接口</li><li>必须要重写接口中的方法</li></ol></blockquote></li></ul><h3 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h3><ul><li><p>内部类就是在一个类内部定义一个类</p></li><li><p>分为</p><ol><li>成员内部类</li><li>静态内部类</li><li>局部内部类</li><li>匿名内部类</li></ol></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例</span></span><br><span class="line"><span class="comment">//Outer.java</span></span><br><span class="line"><span class="keyword">package</span> Base.First.Demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Outer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id= <span class="number">10010</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">out</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这是外部类方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">in</span><span class="params">()</span></span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;这是内部类方法&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获得外部类的私有属性,若内部类为static则无法获取</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getId</span><span class="params">()</span></span>&#123;</span><br><span class="line">            System.out.println(id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Application.java</span></span><br><span class="line"><span class="keyword">package</span> Base.First.Demo.Base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Base.First.Demo.Outer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Outer outer = <span class="keyword">new</span> Outer();</span><br><span class="line">        Outer.Inner inner = outer.<span class="function">new <span class="title">Inner</span><span class="params">()</span></span>;</span><br><span class="line">        outer.out();</span><br><span class="line">        inner.in();</span><br><span class="line">        inner.getId();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/10/13/0fE4zD.png" alt="结果"></p><blockquote><p>一个Java文件中只能有一个 public class，但可以有多个class类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure></blockquote><h1 id="异常机制（Exception）"><a href="#异常机制（Exception）" class="headerlink" title="异常机制（Exception）"></a>异常机制（Exception）</h1><h2 id="异常简述"><a href="#异常简述" class="headerlink" title="异常简述"></a>异常简述</h2><blockquote><ul><li>异常指程序运行中出现的不期而至的各种状况，如：文件找不到，网络连接失败，非法参考等</li><li>异常发生在程序运行期间，它影响了正常的程序执行流程</li></ul></blockquote><ul><li>异常分类：<ol><li>检查性异常</li><li>运行时异常</li><li>错误<strong>ERROR</strong></li></ol></li></ul><img src="https://s1.ax1x.com/2020/10/13/0feNdA.png" alt="异常体系结构" style="zoom: 50%;" /><h2 id="异常处理机制"><a href="#异常处理机制" class="headerlink" title="异常处理机制"></a>异常处理机制</h2><ul><li>五个关键字：try, catch, finally, throws</li><li>捕获异常</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//示例</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//try监控区域</span></span><br><span class="line">    <span class="comment">//这是一个代码块</span></span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="comment">/*要捕获的异常类型*/</span>ArithmeticException ae)&#123;<span class="comment">//此处ae应该是生成的异常对象名</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//捕获异常</span></span><br><span class="line">    <span class="comment">//可以有多个catch，异常类型应由小到大，最终只生效一个，建议最后加一个大异常来见少遗漏</span></span><br><span class="line">    <span class="comment">//若出现对应异常运行此处</span></span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="comment">/*要捕获的异常类型*/</span>NullPointerException ne)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//处理善后</span></span><br><span class="line">    <span class="comment">//可以取舍，但建议用来释放资源</span></span><br><span class="line">    <span class="comment">//无论是否异常都运行此处</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>选中 CTRL + ALT + T</li><li>有了try catch等异常处理后可以避免程序卡死</li></ul></blockquote><ul><li>抛出异常</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span><span class="keyword">throws</span> ArithmeticException</span>&#123;<span class="comment">//抛到上一级，让调用其的地方捕获</span></span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ArithmeticException();<span class="comment">//主动生成异常，一般在方法中使用   </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>自定义异常</p><blockquote><p>只需要继承Exception类即可</p></blockquote></li></ul><h3 id="一些快捷键"><a href="#一些快捷键" class="headerlink" title="一些快捷键"></a>一些快捷键</h3><blockquote><p>ctrl+shift+alt：多行操作<br>psvm：生成main()方法；<br>fori：生成for循环；<br>Ctrl+Alt+v：自动补齐返回值类型<br>ctrl+o：覆写方法<br>ctrl+i：实现接口中的方法<br>ctrl+shift+u：大小写转换<br>CTRL+SHIFT+Z：取消撤销<br>Alt＋Insert：生成构造方法、getter、setter<br>ctrl+y：删除当前行<br>Ctrl+Shift+J：将选中的行合并成一行<br>ctrl+g：定位到某一行<br>Ctrl+Shitft+向下箭头：将光标所在的代码块向下整体移动<br>Ctrl+Shift+向上箭头：将光标所在的代码块向上整体移动<br>Alt+Shift+向下箭头：将行向下移动<br>Alt+Shift+向上箭头：将行向上移动<br>Ctrl+F：在当前文件中查找<br>Ctrl+R：替换字符串<br>Ctrl+Shift+F:在全局文件中查找字符串<br>Ctrl+Shift+R：在全局中替换字符串<br>Ctrl+Shift+Enter：自动补齐{}或者分号;<br>Shift+Enter：在当前行的下方开始新行<br>Ctrl+Alt+Enter：在当前行的上方插入新行<br>Ctrl+Delete：删除光标所在至单词结尾处的所有字符</p></blockquote><p><a href="https://www.bilibili.com/video/BV12J41137hu?p=1">参考教学视频</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Java基础语法&quot;&gt;&lt;a href=&quot;#Java基础语法&quot; class=&quot;headerlink&quot; title=&quot;Java基础语法&quot;&gt;&lt;/a&gt;Java基础语法&lt;/h1&gt;&lt;h2 id=&quot;注释，标识符，关键字&quot;&gt;&lt;a href=&quot;#注释，标识符，关键字&quot; class=&quot;</summary>
      
    
    
    
    
    <category term="基础学习" scheme="https://github.com/FeOAr/FeOAr.github.io.git/tags/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="https://github.com/FeOAr/FeOAr.github.io.git/2020/10/07/MD%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://github.com/FeOAr/FeOAr.github.io.git/2020/10/07/MD%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</id>
    <published>2020-10-06T16:00:00.000Z</published>
    <updated>2020-10-07T15:24:58.838Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><h2 id="1-代码块"><a href="#1-代码块" class="headerlink" title="1.代码块"></a>1.代码块</h2><blockquote><p>“ ```语言 “</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//cpp with hello world</span></span><br><span class="line">include&lt;iostream.h&gt;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;hello wordl&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">print(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="2-标题"><a href="#2-标题" class="headerlink" title="2.标题"></a>2.标题</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#[空格] 一级</span><br><span class="line">##[空格] 二级</span><br><span class="line">###[空格] 三级    </span><br></pre></td></tr></table></figure><h2 id="3-字体"><a href="#3-字体" class="headerlink" title="3.字体"></a>3.字体</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加粗</span></span><br><span class="line">**无产阶级**</span><br><span class="line"><span class="comment">//代码高亮显示</span></span><br><span class="line">==资产阶级==</span><br><span class="line"><span class="comment">//删除线</span></span><br><span class="line">~~阶级斗争~~</span><br><span class="line"><span class="comment">//斜体</span></span><br><span class="line">*中产阶级*</span><br></pre></td></tr></table></figure><p><strong>无产阶级</strong></p><p>==阶级斗争==</p><p><del>资产阶级</del></p><p><em>中产阶级</em></p><h2 id="4-引用"><a href="#4-引用" class="headerlink" title="4.引用"></a>4.引用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引用语法</span></span><br><span class="line">&gt;作者：赵航锐</span><br><span class="line">&gt;&gt;作者：赵航锐   </span><br></pre></td></tr></table></figure><blockquote><p>作者：***</p></blockquote><blockquote><p>作者</p><blockquote><p>作者</p></blockquote></blockquote><h2 id="5-分割线"><a href="#5-分割线" class="headerlink" title="5.分割线"></a>5.分割线</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分割线</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">//分割线</span></span><br><span class="line">***</span><br><span class="line">    </span><br></pre></td></tr></table></figure><hr><h2 id="6-图片插入"><a href="#6-图片插入" class="headerlink" title="6.图片插入"></a>6.图片插入</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在线图片/本地图片</span></span><br><span class="line">![我的图片](路径)</span><br></pre></td></tr></table></figure><p><img src="%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98.assets/%E5%BE%AE%E8%BD%AF.PNG" alt="我的照片"></p><h2 id="7-超链接"><a href="#7-超链接" class="headerlink" title="7.超链接"></a>7.超链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;超链接语法</span><br><span class="line">[我的码云](https:&#x2F;&#x2F;gitee.com&#x2F;feoar)</span><br></pre></td></tr></table></figure><p><a href="https://gitee.com/feoar">我的码云</a></p><h2 id="8-列表"><a href="#8-列表" class="headerlink" title="8.列表"></a>8.列表</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//无序列表</span></span><br><span class="line">- 目录<span class="number">1</span></span><br><span class="line">- 目录<span class="number">2</span></span><br><span class="line">- 目录<span class="number">3</span>    </span><br><span class="line"><span class="comment">//有序列表</span></span><br><span class="line"><span class="number">1.</span>项目</span><br><span class="line"><span class="number">2.</span>项目   </span><br></pre></td></tr></table></figure><ul><li>目录1</li><li>目录2</li><li>目录3  <ol><li>项目</li><li>项目</li></ol></li></ul><h2 id="9-表格"><a href="#9-表格" class="headerlink" title="9.表格"></a>9.表格</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><blockquote><p>hello blog</p></blockquote><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Markdown语法&quot;&gt;&lt;a href=&quot;#Markdown语法&quot; class=&quot;headerlink&quot; title=&quot;Markdown语法&quot;&gt;&lt;/a&gt;Markdown语法&lt;/h1&gt;&lt;h2 id=&quot;1-代码块&quot;&gt;&lt;a href=&quot;#1-代码块&quot; class=&quot;he</summary>
      
    
    
    
    
    <category term="基础学习" scheme="https://github.com/FeOAr/FeOAr.github.io.git/tags/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Markdown form CSDN</title>
    <link href="https://github.com/FeOAr/FeOAr.github.io.git/2020/10/07/CSDN_MD_GRAMMAR/"/>
    <id>https://github.com/FeOAr/FeOAr.github.io.git/2020/10/07/CSDN_MD_GRAMMAR/</id>
    <published>2020-10-06T16:00:00.000Z</published>
    <updated>2020-10-07T15:30:21.869Z</updated>
    
    <content type="html"><![CDATA[<p>@<a href="%E8%BF%99%E9%87%8C%E5%86%99%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%AE%E5%BD%95%E6%A0%87%E9%A2%98">TOC</a></p><h1 id="欢迎使用Markdown编辑器"><a href="#欢迎使用Markdown编辑器" class="headerlink" title="欢迎使用Markdown编辑器"></a>欢迎使用Markdown编辑器</h1><p>你好！ 这是你第一次使用 <strong>Markdown编辑器</strong> 所展示的欢迎页。如果你想学习如何使用Markdown编辑器, 可以仔细阅读这篇文章，了解一下Markdown的基本语法知识。</p><h2 id="新的改变"><a href="#新的改变" class="headerlink" title="新的改变"></a>新的改变</h2><p>我们对Markdown编辑器进行了一些功能拓展与语法支持，除了标准的Markdown编辑器功能，我们增加了如下几点新功能，帮助你用它写博客：</p><ol><li><strong>全新的界面设计</strong> ，将会带来全新的写作体验；</li><li>在创作中心设置你喜爱的代码高亮样式，Markdown <strong>将代码片显示选择的高亮样式</strong> 进行展示；</li><li>增加了 <strong>图片拖拽</strong> 功能，你可以将本地的图片直接拖拽到编辑区域直接展示；</li><li>全新的 <strong>KaTeX数学公式</strong> 语法；</li><li>增加了支持<strong>甘特图的mermaid语法<a href="%5Bmermaid%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E%5D(https://mermaidjs.github.io/)">^1</a></strong> 功能；</li><li>增加了 <strong>多屏幕编辑</strong> Markdown文章功能；</li><li>增加了 <strong>焦点写作模式、预览模式、简洁写作模式、左右区域同步滚轮设置</strong> 等功能，功能按钮位于编辑区域与预览区域中间；</li><li>增加了 <strong>检查列表</strong> 功能。</li></ol><h2 id="功能快捷键"><a href="#功能快捷键" class="headerlink" title="功能快捷键"></a>功能快捷键</h2><p>撤销：<kbd>Ctrl/Command</kbd> + <kbd>Z</kbd><br>重做：<kbd>Ctrl/Command</kbd> + <kbd>Y</kbd><br>加粗：<kbd>Ctrl/Command</kbd> + <kbd>B</kbd><br>斜体：<kbd>Ctrl/Command</kbd> + <kbd>I</kbd><br>标题：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>H</kbd><br>无序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>U</kbd><br>有序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>O</kbd><br>检查列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>C</kbd><br>插入代码：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd><br>插入链接：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>L</kbd><br>插入图片：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>G</kbd><br>查找：<kbd>Ctrl/Command</kbd> + <kbd>F</kbd><br>替换：<kbd>Ctrl/Command</kbd> + <kbd>G</kbd></p><h2 id="合理的创建标题，有助于目录的生成"><a href="#合理的创建标题，有助于目录的生成" class="headerlink" title="合理的创建标题，有助于目录的生成"></a>合理的创建标题，有助于目录的生成</h2><p>直接输入1次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成1级标题。<br>输入2次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成2级标题。<br>以此类推，我们支持6级标题。有助于使用<code>TOC</code>语法后生成一个完美的目录。</p><h2 id="如何改变文本的样式"><a href="#如何改变文本的样式" class="headerlink" title="如何改变文本的样式"></a>如何改变文本的样式</h2><p><em>强调文本</em> <em>强调文本</em></p><p><strong>加粗文本</strong> <strong>加粗文本</strong></p><p>==标记文本==</p><p><del>删除文本</del></p><blockquote><p>引用文本</p></blockquote><p>H<del>2</del>O is是液体。</p><p>2^10^ 运算结果是 1024.</p><h2 id="插入链接与图片"><a href="#插入链接与图片" class="headerlink" title="插入链接与图片"></a>插入链接与图片</h2><p>链接: <a href="https://www.csdn.net/">link</a>.</p><p>图片: <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw" alt="Alt"></p><p>带尺寸的图片: ![Alt](<a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw">https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw</a> =30x30)</p><p>居中的图片: <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center" alt="Alt"></p><p>居中并且带尺寸的图片: ![Alt](<a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center">https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center</a> =30x30)</p><p>当然，我们为了让用户更加便捷，我们增加了图片拖拽功能。</p><h2 id="如何插入一段漂亮的代码片"><a href="#如何插入一段漂亮的代码片" class="headerlink" title="如何插入一段漂亮的代码片"></a>如何插入一段漂亮的代码片</h2><p>去<a href="https://mp.csdn.net/console/configBlog">博客设置</a>页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的 <code>代码片</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// An highlighted block</span></span><br><span class="line"><span class="keyword">var</span> foo = <span class="string">&#x27;bar&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="生成一个适合你的列表"><a href="#生成一个适合你的列表" class="headerlink" title="生成一个适合你的列表"></a>生成一个适合你的列表</h2><ul><li>项目<ul><li>项目<ul><li>项目</li></ul></li></ul></li></ul><ol><li>项目1</li><li>项目2</li><li>项目3</li></ol><ul><li><input disabled="" type="checkbox"> 计划任务</li><li><input checked="" disabled="" type="checkbox"> 完成任务</li></ul><h2 id="创建一个表格"><a href="#创建一个表格" class="headerlink" title="创建一个表格"></a>创建一个表格</h2><p>一个简单的表格是这么创建的：<br>| 项目 | Value |<br>| —- | —– |<br>| 电脑 | $1600 |<br>| 手机 | $12   |<br>| 导管 | $1    |</p><h3 id="设定内容居中、居左、居右"><a href="#设定内容居中、居左、居右" class="headerlink" title="设定内容居中、居左、居右"></a>设定内容居中、居左、居右</h3><p>使用<code>:---------:</code>居中<br>使用<code>:----------</code>居左<br>使用<code>----------:</code>居右<br>|     第一列     |         第二列 | 第三列         |<br>| :————: | ————-: | :————- |<br>| 第一列文本居中 | 第二列文本居右 | 第三列文本居左 |</p><h3 id="SmartyPants"><a href="#SmartyPants" class="headerlink" title="SmartyPants"></a>SmartyPants</h3><p>SmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如：<br>|    TYPE   |ASCII                          |HTML<br>|—————-|——————————-|—————————–|<br>|Single backticks|<code>&#39;Isn&#39;t this fun?&#39;</code>            |’Isn’t this fun?’            |<br>|Quotes          |<code>&quot;Isn&#39;t this fun?&quot;</code>            |”Isn’t this fun?”            |<br>|Dashes          |<code>-- is en-dash, --- is em-dash</code>|– is en-dash, — is em-dash|</p><h2 id="创建一个自定义列表"><a href="#创建一个自定义列表" class="headerlink" title="创建一个自定义列表"></a>创建一个自定义列表</h2><dl><dt>Markdown</dt><dd>Text-to-HTML conversion tool</dd></dl><dl><dt>Authors<br>:  John</dt><dd>Luke</dd></dl><h2 id="如何创建一个注脚"><a href="#如何创建一个注脚" class="headerlink" title="如何创建一个注脚"></a>如何创建一个注脚</h2><p>一个具有注脚的文本。<a href="%E6%B3%A8%E8%84%9A%E7%9A%84%E8%A7%A3%E9%87%8A">^2</a></p><h2 id="注释也是必不可少的"><a href="#注释也是必不可少的" class="headerlink" title="注释也是必不可少的"></a>注释也是必不可少的</h2><p>Markdown将文本转换为 HTML。</p><p>*[HTML]:   超文本标记语言</p><h2 id="KaTeX数学公式"><a href="#KaTeX数学公式" class="headerlink" title="KaTeX数学公式"></a>KaTeX数学公式</h2><p>您可以使用渲染LaTeX数学表达式 <a href="https://khan.github.io/KaTeX/">KaTeX</a>:</p><p>Gamma公式展示 $\Gamma(n) = (n-1)!\quad\forall<br>n\in\mathbb N$ 是通过欧拉积分</p><p>$$<br>\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt,.<br>$$</p><blockquote><p>你可以找到更多关于的信息 <strong>LaTeX</strong> 数学表达式<a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">here</a>.</p></blockquote><h2 id="新的甘特图功能，丰富你的文章"><a href="#新的甘特图功能，丰富你的文章" class="headerlink" title="新的甘特图功能，丰富你的文章"></a>新的甘特图功能，丰富你的文章</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title Adding GANTT diagram functionality to mermaid</span><br><span class="line">        section 现有任务</span><br><span class="line">        已完成               :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        进行中               :active,  des2, 2014-01-09, 3d</span><br><span class="line">        计划一               :         des3, after des2, 5d</span><br><span class="line">        计划二               :         des4, after des3, 5d</span><br></pre></td></tr></table></figure><ul><li>关于 <strong>甘特图</strong> 语法，参考 <a href="https://mermaidjs.github.io/">这儿</a>,</li></ul><h2 id="UML-图表"><a href="#UML-图表" class="headerlink" title="UML 图表"></a>UML 图表</h2><p>可以使用UML图表进行渲染。 <a href="https://mermaidjs.github.io/">Mermaid</a>. 例如下面产生的一个序列图：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">张三 -&gt;&gt; 李四: 你好！李四, 最近怎么样?</span><br><span class="line">李四--&gt;&gt;王五: 你最近怎么样，王五？</span><br><span class="line">李四--x 张三: 我很好，谢谢!</span><br><span class="line">李四-x 王五: 我很好，谢谢!</span><br><span class="line">Note right of 王五: 李四想了很长时间, 文字太长了&lt;br&#x2F;&gt;不适合放在一行.</span><br><span class="line"></span><br><span class="line">李四--&gt;&gt;张三: 打量着王五...</span><br><span class="line">张三-&gt;&gt;王五: 很好... 王五, 你怎么样?</span><br></pre></td></tr></table></figure><p>这将产生一个流程图。:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[长方形] -- 链接 --&gt; B((圆))</span><br><span class="line">A --&gt; C(圆角长方形)</span><br><span class="line">B --&gt; D&#123;菱形&#125;</span><br><span class="line">C --&gt; D</span><br></pre></td></tr></table></figure><ul><li>关于 <strong>Mermaid</strong> 语法，参考 <a href="https://mermaidjs.github.io/">这儿</a>,</li></ul><h2 id="FLowchart流程图"><a href="#FLowchart流程图" class="headerlink" title="FLowchart流程图"></a>FLowchart流程图</h2><p>我们依旧会支持flowchart的流程图：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">flowchat</span><br><span class="line">st&#x3D;&gt;start: 开始</span><br><span class="line">e&#x3D;&gt;end: 结束</span><br><span class="line">op&#x3D;&gt;operation: 我的操作</span><br><span class="line">cond&#x3D;&gt;condition: 确认？</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><ul><li>关于 <strong>Flowchart流程图</strong> 语法，参考 <a href="http://adrai.github.io/flowchart.js/">这儿</a>.</li></ul><h2 id="导出与导入"><a href="#导出与导入" class="headerlink" title="导出与导入"></a>导出与导入</h2><h3 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h3><p>如果你想尝试使用此编辑器, 你可以在此篇文章任意编辑。当你完成了一篇文章的写作, 在上方工具栏找到 <strong>文章导出</strong> ，生成一个.md文件或者.html文件进行本地保存。</p><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>如果你想加载一篇你写过的.md文件，在上方工具栏可以选择导入功能进行对应扩展名的文件导入，<br>继续你的创作。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;@&lt;a href=&quot;%E8%BF%99%E9%87%8C%E5%86%99%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%AE%E5%BD%95%E6%A0%87%E9%A2%98&quot;&gt;TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;欢迎使用Markdown编辑器</summary>
      
    
    
    
    
    <category term="引用备忘" scheme="https://github.com/FeOAr/FeOAr.github.io.git/tags/%E5%BC%95%E7%94%A8%E5%A4%87%E5%BF%98/"/>
    
  </entry>
  
  <entry>
    <title>汇编语言</title>
    <link href="https://github.com/FeOAr/FeOAr.github.io.git/2020/10/07/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
    <id>https://github.com/FeOAr/FeOAr.github.io.git/2020/10/07/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/</id>
    <published>2020-10-06T16:00:00.000Z</published>
    <updated>2020-10-08T12:46:40.043Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编语言"><a href="#汇编语言" class="headerlink" title="汇编语言"></a>汇编语言</h1><h2 id="1-CPU-寄存器，内存"><a href="#1-CPU-寄存器，内存" class="headerlink" title="1. CPU,寄存器，内存"></a>1. CPU,寄存器，内存</h2><ul><li>CPU由运算器，控制器，寄存器构成</li><li>CPU引出了三种总线：地址总线，控制总线，数据总线<ul><li>地址总线的宽度决定了CPU的寻址能力</li><li>数据总线的宽度决定了CPU与其他旗舰进行数据传送时一次传输的数据量</li><li>控制总线的宽度决定了CPU对系统中其他器件的控制能力</li></ul></li></ul><h3 id="8086寄存器"><a href="#8086寄存器" class="headerlink" title="8086寄存器"></a>8086寄存器</h3><ul><li>8086寄存器为16位<ul><li>运算器一次运算16位数据</li><li>寄存器最大宽度16位</li><li>寄存器与运算器之间的通路16位</li></ul></li><li>8086有14个寄存器：AX, BX, CX, DX, SI, DI, SP, BP, IP, CS, SS, DS, ES, PSW<ul><li>段寄存器：CS, SS, DS, ES</li><li>偏移地址寄存器：IP</li></ul></li><li>通用寄存器为：AX, BX, CX, DX    ，可以拆分位高低八位寄存器比如：AH与AL</li></ul><h2 id="2-汇编指令（核心）"><a href="#2-汇编指令（核心）" class="headerlink" title="2.汇编指令（核心）"></a>2.汇编指令（核心）</h2><blockquote><p>机器码的助记符，有对应的机器码</p></blockquote><ul><li><p>MOV指令</p><blockquote><p>eg.</p><p>​      mov ax,18    ||    将18送入寄存器AX（18位立即数）</p><p>​      mov ah,78</p><p>​      mov ax, bx    ||    将bx中的值移入ax    ||    原理是将bx中的内容复制到ax</p></blockquote></li><li><p>ADD指令</p><blockquote><p>eg.</p><p>​        add ax,78    ||    ax中的值加78</p><p>​        add ax, bx    ||    ax和bx中的数值相加，结果存在ax中</p></blockquote><ul><li>溢出丢弃最高位，低位寄存器独立看待同样丢弃最高位</li><li>指令的操作对象位数相同</li></ul></li></ul><p><img src="https://s1.ax1x.com/2020/10/08/00LsCn.png"></p><p><img src="https://s1.ax1x.com/2020/10/08/00Ly3q.png"></p><h2 id="3-伪指令"><a href="#3-伪指令" class="headerlink" title="3.伪指令"></a>3.伪指令</h2><blockquote><p>没有对应的机器码，由编译器执行，计算机并不执行</p></blockquote><h2 id="4-其他符号"><a href="#4-其他符号" class="headerlink" title="4.其他符号"></a>4.其他符号</h2><blockquote><p>如+, -, *, /, 等，由编译器识别，没有对应机器码。</p></blockquote><h2 id="5-其他"><a href="#5-其他" class="headerlink" title="5.其他"></a>5.其他</h2><h4 id="物理地址"><a href="#物理地址" class="headerlink" title="物理地址"></a>物理地址</h4><ul><li>段地址（16位）*16 + 偏移地址（16位）= 物理地址（20位）<ul><li>20位物理地址意味着寻址能力达到2^20即1MB</li><li>以上相加过程在地址加法器中实现，然后物理地址送到I/O电路，再到地址总线到内存</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;汇编语言&quot;&gt;&lt;a href=&quot;#汇编语言&quot; class=&quot;headerlink&quot; title=&quot;汇编语言&quot;&gt;&lt;/a&gt;汇编语言&lt;/h1&gt;&lt;h2 id=&quot;1-CPU-寄存器，内存&quot;&gt;&lt;a href=&quot;#1-CPU-寄存器，内存&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
    <category term="基础学习" scheme="https://github.com/FeOAr/FeOAr.github.io.git/tags/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记</title>
    <link href="https://github.com/FeOAr/FeOAr.github.io.git/2020/10/07/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>https://github.com/FeOAr/FeOAr.github.io.git/2020/10/07/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</id>
    <published>2020-10-06T16:00:00.000Z</published>
    <updated>2020-10-07T15:28:55.057Z</updated>
    
    <content type="html"><![CDATA[<h1 id="读书笔记"><a href="#读书笔记" class="headerlink" title="读书笔记"></a>读书笔记</h1><h2 id="《毛泽东文选》"><a href="#《毛泽东文选》" class="headerlink" title="《毛泽东文选》"></a>《毛泽东文选》</h2><p>谁是我们的敌人?谁是我们的朋友?这个问题是革命的首要问题。中国过去一切革命斗争成效甚少，其基本原因就是因为不能团结真正的朋友，以攻击真正的敌人。革命党是群众的向导，在革命中未有革命党领错了路而革命不失败的。我们的革命要有不领错路和一定成功的把握，不可不注意团结我们的真正的朋友，以攻击我们的真正的敌人。我们要分辨真正的敌友，不可不将中国社会各阶级的经济地位及其对于革命的态度，作一个大概的分析。</p><blockquote><p>开篇点明了革命的关键问题，我们的敌人是谁，要革谁的命，谁将是我们的同志，谁又是潜在的敌人，谁又是潜在的队友；都需要搞明白弄清楚才能有以此为基础之一的战略制定。我想起了孟子的一篇文章中的话“得道者多助，失道者寡助。寡助之至，亲戚畔之。多助之至，天下顺之。以天下之所顺，攻亲戚之所畔，故君子有不战，战必胜矣。 ”，<code> 意思是能行“仁政”的君王，帮助支持他的人就多，不施行“仁政”的君主，支持帮助他的人就少。支持帮助他的人少到了极点，连内外亲属也会背叛他；支持帮助他的人多到了极点，天下所有人都会归顺他。凭着天下人都归顺他的条件，去攻打那连亲属都反对背叛的君王，君子要么不战斗，（如果）战斗就一定会取得胜利。</code> </p></blockquote><p>​        地主阶级和买办阶级。在经济落后的半殖民地的中国，地主阶级和买办阶级完全是国际资产阶级的附庸，其生存和发展，是附属于帝国主义的。</p><p>　　中产阶级。这个阶级代表中国城乡资本主义的生产关系。</p><p>　　小资产阶级。如自耕农，手工业主，小知识阶层——学生界、中小学教员、小员司、小事务员、小律师，小商人等都属于这一类。</p><p>　　半无产阶级。此处所谓半无产阶级，包含：绝大部分半自耕农，贫农，小手工业者，店员，小贩等五种。</p><p>　　无产阶级。现代工业无产阶级约二百万人。所谓农村无产阶级，是指长工、月工、零工等雇农而言。</p><p>　　此外，还有数量不小的游民无产者，为失了土地的农民和失了工作机会的手工业工人。</p><p>　　综上所述，可知一切勾结帝国主义的军阀、官僚、买办阶级、大地主阶级以及附属于他们的一部分反动知识界，是我们的敌人。工业无产阶级是我们革命的领导力量。一切半无产阶级、小资产阶级，是我们最接近的朋友。那动摇不定的中产阶级，其右翼可能是我们的敌人，其左翼可能是我们的朋友——但我们要时常提防他们，不要让他们扰乱了我们的阵线。</p><blockquote><p>这几段我有所删减，几段文字精准的抛析了当代中国社会的人员阶级结构以及比重。结合第一段，找到了革命的主力军为日后的胜利找到了同盟军。在《江泽民在庆祝建档八十周年大会上的讲话》同样也指明了中国特色社会主义事业的建设者问题，不同历史阶段的两个创造性解答，体现了我们党从现实国情，，党情和外面的世情触发，在马克思主义立场，观点，方法指导下解放思想，实事求是，团结社会各阶层，巩固自己的社会基础，扩大自己的群基础，不断提高党的社会影响力，带领革命斗争多的胜利，带领中国特色社会主义建设取得胜利的远见卓识。为并且随着时代发展，依然适用于现代社会的阶级人员构成。</p></blockquote><p>一国之内，在四围白色政权的包围中，有一小块或若干小块红色政权的区域长期地存在，这是世界各国从来没有的事。这种奇事的发生，有其独特的原因。而其存在和发展，亦必有相当的条件。第一，它的发生不能在任何帝国主义的国家，也不能在任何帝国主义直接统治的殖民地[7]，必然是在帝国主义间接统治的经济落后的半殖民地的中国。因为这种奇怪现象必定伴着另外一件奇怪现象，那就是白色政权之间的战争。帝国主义和国内买办豪绅阶级支持着的各派新旧军阀，从民国元年以来，相互间进行着继续不断的战争，这是半殖民地中国的特征之一。不但全世界帝国主义国家没有一国有这种现象，就是帝国主义直接统治的殖民地也没有一处有这种现象，仅仅帝国主义间接统治的中国这样的国家才有这种现象。这种现象产生的原因有两种，即地方的农业经济(不是统一的资本主义经济)和帝国主义划分势力范围的分裂剥削政策。因为有了白色政权间的长期的分裂和战争，便给了一种条件，使一小块或若干小块的共产党领导的红色区域，能够在四围白色政权包围的中间发生和坚持下来。湘赣边界的割据，就是这许多小块中间的一小块。有些同志在困难和危急的时候，往往怀疑这样的红色政权的存在，而发生悲观的情绪。这是没有找出这种红色政权所以发生和存在的正确的解释的缘故。我们只须知道中国白色政权的分裂和战争是继续不断的，则红色政权的发生、存在并且日益发展，便是无疑的了。第二，中国红色政权首先发生和能够长期地存在的地方，不是那种并未经过民主革命影响的地方，例如四川、贵州、云南及北方各省，而是在一九二六和一九二七两年资产阶级民主革命过程中工农兵士群众曾经大大地起来过的地方，例如湖南、广东、湖北、江西等省。这些省份的许多地方，曾经有过很广大的工会和农民协会的组织，有过工农阶级对地主豪绅阶级和资产阶级的许多经济的政治的斗争。所以广州产生过三天的城市民众政权，而海陆丰、湘东、湘南、湘赣边界、湖北的黄安等地都有过农民的割据[8]。至于此刻的红军，也是由经过民主的政治训练和接受过工农群众影响的国民革命军中分化出来的。那些毫未经过民主的政治训练、毫未接受过工农影响的军队，例如阎锡山、张作霖的军队，此时便决然不能分化出可以造成红军的成分来。第三，小地方民众政权之能否长期地存在，则决定于全国革命形势是否向前发展这一个条件。全国革命形势是向前发展的，则小块红色区域的长期存在，不但没有疑义，而且必然地要作为取得全国政权的许多力量中间的一个力量。全国革命形势若不是继续地向前发展，而有一个比较长期的停顿，则小块红色区域的长期存在是不可能的。现在中国革命形势是跟着国内买办豪绅阶级和国际资产阶级的继续的分裂和战争，而继续地向前发展的。所以，不但小块红色区域的长期存在没有疑义，而且这些红色区域将继续发展，日渐接近于全国政权的取得。第四，相当力量的正式红军的存在，是红色政权存在的必要条件。若只有地方性质的赤卫队[9]而没有正式的红军，则只能对付挨户团[10]，而不能对付正式的白色军队。所以虽有很好的工农群众，若没有相当力量的正式武装，便决然不能造成割据局面，更不能造成长期的和日益发展的割据局面。所以“工农武装割据”的思想，是共产党和割据地方的工农群众必须充分具备的一个重要的思想。第五，红色政权的长期的存在并且发展，除了上述条件之外，还须有一个要紧的条件，就是共产党组织的有力量和它的政策的不错误。  </p><blockquote><p>毛泽东写这篇文章时正值第二次革命战争时期，由毛泽东同志所领导的秋收起义和周恩来、朱德等同志所领导的“八．一”南昌起义两支队伍会师井冈山，建立了我党领导的第一个革命根据地。从此，在半封建半殖民地的旧中国的土地上有了属于人民自己的红色政权。它的诞生，使祖祖辈辈受剥削、受压迫的劳动人民看到了希望，看到了曙光，因为共产党所领导的红色政权是人民自己的政权，是为广大劳苦大众谋利益的。在此之前，由于以陈独秀为代表的右倾机会主义者，在第一次国共合作时，没有坚决执行无产阶级自己的领导权，一贯向以蒋介石为代表的国民党右派势力妥协，结果被大地主、大资产阶级篡夺了领导权，以反革命代替了革命。正如毛泽东同志在文章中所提到的“中国迫切需要一个资产阶级的民主革命，这个革命必须由无产阶级领导才能完成。事实也正是这样，1927年蒋介石悍然发动的“四．一二”反革命政变就是如此，血的教训告诉我们，中国共产党如果不掌握自己的革命武装，建立属于自己的红色政权，就不能取得革命的最后胜利</p></blockquote><p>　本本主义的社会科学研究法也同样是最危险的，甚至可能走上反革命的道路，中国有许多专门从书本上讨生活的从事社会科学研究的共产党员，不是一批一批地成了反革命吗?就是明显的证据。我们说马克思主义是对的，决不是因为马克思这个人是什么“先哲”，而是因为他的理论，在我们的实践中，在我们的斗争中，证明了是对的。我们的斗争需要马克思主义。我们欢迎这个理论，丝毫不存什么“先哲”一类的形式的甚至神秘的念头在里面。读过马克思主义“本本”的许多人，成了革命叛徒，那些不识字的工人常常能够很好地掌握马克思主义。马克思主义的“本本”是要学习的，但是必须同我国的实际情况相结合。我们需要“本本”，但是一定要纠正脱离实际情况的本本主义。</p><blockquote><p>本本主义即教条主义, 该文从认识论的高度阐明调查研究的重要性，提出了传之后世的“没有调查,就没有发言权”、“中国革命斗争的胜利要靠中国同志了解中国情况”等著名论断，是对马克思主义认识论和历史唯物主义的丰富和发展，蕴含着实事求是、群众路线、独立自主的基本思想，是中国共产党思想路线的雏形。明确表达了实事求是、群众路线、独立自主的基本观点，阐明了中国的马克思主义者对待马克思主义的态度。毛泽东在《反对本本主义》中倡导的实事求是、群众路线、独立自主的精神，对于今日中国落实“四个全面”仍具有重要理论意义与实践价值。</p></blockquote><h2 id="邓小平文选"><a href="#邓小平文选" class="headerlink" title="邓小平文选"></a>邓小平文选</h2><p>帝国主义的各种花样直到封锁，其目的在于迫我就范，我们的斗争也在于迫使帝国主义就范。我们绝不会就帝国主义之范，而一个多月的经验看出，帝国主义就我之范亦非易事。这一时期双方斗争实际上都是试探的性质，直到英美摊出封锁的牌。封锁，在目前说来，虽增加我们不少困难，但对我仍属有利，即使不封锁，我们许多困难也是不能解决的。但封锁太久了，对我则是极不利的。打破封锁之道，毛主席强调从军事上迅速占领两广云贵川康青宁诸省，尽量求得早日占领沿海各岛及台湾。同时我们提出的外交政策的一面倒，愈早表现于行动则对我愈有利（毛主席说，这样是主动的倒，免得将来被动的倒）；内部政策强调认真的从自力更生打算，不但叫，而且认真着手做（毛主席说，更主要的从长远的新民主主义建设着眼来提出这个问题），毛主席说这两条很好，与中央精神一致。我们这样做，即占领全国、一面倒和自力更生，不但可以立于坚固的基础之上，而且才有可能迫使帝国主义就我之范。</p><blockquote><p>在当前疫情与美帝国主义为首的西方老牌资本主义国家对中国的围追堵截，技术封锁，贸易壁垒的大背景下，邓小平指出了我们绝不投降的方针，清晰的分析的当时的国际形式对国内的影响恰如今日，今天面对技术的封锁与列强的欺压。我国保持着比较强硬的外交政策。经济全球化的今天，国内有不少量的技术依赖于外国，这次收到技术封锁我们只能自力更生，没有就从零开始追赶。美国政府的欺压只会激发中国人的斗志，相信在未来，外国发达资本主义国家对于中国的技术优势只会越来越少甚至被反超。中国的国际地位将会极大的提升，同时配合中国提出的一系列贸易政策以中国为中心的三级贸易圈将会逐渐成熟，国内的低端产业将会如现在一样逐渐向发展中国家迁移，国内的产业将会进一步升级到高端产业。届时，中国将会收割以中国为中心的三级贸易圈的财富，国民的生活水平会逐步提高，这是建立在国内财富分配进一步优化的前提下的。如果如今天一样继续内卷下去，即使可以收割世界的财富，国内中产阶级无产阶级的生活质量有可能继续下降。</p></blockquote><h2 id="习近平讲话系列"><a href="#习近平讲话系列" class="headerlink" title="习近平讲话系列"></a>习近平讲话系列</h2><p>改革开放以来，我们党始终高度重视正确处理改革发展稳定关系，始终把维护国家安全和社会安定作为党和国家的一项基础性工作。我们保持了我国社会大局稳定，为改革开放和社会主义现代化建设营造了良好环境。“安而不忘危，存而不忘亡，治而不忘乱。”同时，必须清醒地看到，新形势下我国国家安全和社会安定面临的威胁和挑战增多，特别是各种威胁和挑战联动效应明显。我们必须保持清醒头脑、强化底线思维，有效防范、管理、处理国家安全风险，有力应对、处置、化解社会安定挑战。</p><p>要加强新形势下反分裂斗争，高举各民族大团结的旗帜，坚持各民族共同团结奋斗、共同繁荣发展的主题，深入开展民族团结宣传教育，打牢民族团结的思想基础，最大限度团结各族群众。要加强基层组织和基层政权建设，多做深入细致的群众工作。要正确把握党的民族、宗教政策，及时妥善解决影响民族团结的矛盾纠纷，坚决遏制和打击境内外敌对势力利用民族问题进行的分裂、渗透、破坏活动。</p><blockquote><p>国家安全是国家生存和发展最基本最重要的前提。自2014年香港“非法占中”以来，港独思潮频频在香港社会抬头。一些分离分子企图通过对民族自决的歪曲，以全民公投的形式谋求“香港独立”；也常有独派借言论自由的名义大肆宣传港独思潮。港独思潮作为一种极端本土主义，若任其自由发展而不采取任何有效措施，必然给香港和内地社会繁荣与稳定带来不可忽略的破坏。在其嚣张的气焰背后不难发现有境外反华势力的支持。这只是众多案例之一，显而易见我国国家安全和社会安定面临的威胁和挑战增多，习主席的讲话对于国家安全问题做了新的概括，顺应时代发展的潮流，回应了广大人民的关切，有十分重要的指导意义。</p></blockquote><p>维护国家安全，必须做好维护社会和谐稳定工作，做好预防化解社会矛盾工作，从制度、机制、政策、工作上积极推动社会矛盾预防化解工作。要增强发展的全面性、协调性、可持续性，加强保障和改善民生工作，从源头上预防和减少社会矛盾的产生。要以促进社会公平正义、增进人民福祉为出发点和落脚点，加大协调各方面利益关系的力度，推动发展成果更多更公平惠及全体人民。要完善和落实维护群众合法权益的体制机制，完善和落实社会稳定风险评估机制，预防和减少利益冲突。要全面推进依法治国，更好维护人民群众合法权益。对各类社会矛盾，要引导群众通过法律程序、运用法律手段解决，推动形成办事依法、遇事找法、解决问题用法、化解矛盾靠法的良好环境。</p><blockquote><p>看到社会层面的指导方针我感慨万千，中国特色社会主义的道路还是很漫长和曲折的。必须要有党的正确的具有前瞻性和胆魄的指导以及人民群众的努力建设才能走下去。</p></blockquote><p>我们党作为百年大党，如何永葆先进性和纯洁性、永葆青春活力，如何永远得到人民拥护和支持，如何实现长期执政，是我们必须回答好、解决好的一个根本性问题。我们党要求全党同志不忘初心、牢记使命，就是要提醒全党同志，党的初心和使命是党的性质宗旨、理想信念、奋斗目标的集中体现，越是长期执政，越不能丢掉马克思主义政党的本色，越不能忘记党的初心使命，越不能丧失自我革命精神。</p><p>我们党的初心和使命是建立在马克思主义科学理论基础之上的。马克思、恩格斯在《共产党宣言》中庄严宣告：“过去的一切运动都是少数人的，或者为少数人谋利益的运动。无产阶级的运动是绝大多数人的，为绝大多数人谋利益的独立的运动。”我们党是用马克思主义武装起来的政党，始终把为中国人民谋幸福、为中华民族谋复兴作为自己的初心和使命，并一以贯之体现到党的全部奋斗之中。忘记这个初心和使命，党就会改变性质、改变颜色，就会失去人民、失去未来。只要我们党牢牢坚持立党为公、执政为民，牢牢坚持为中国人民谋幸福、为中华民族谋复兴，不断检视自己，不掩饰缺点，不文过饰非，坚决同一切弱化党的先进性和纯洁性、危害党的肌体健康的现象作斗争，就一定能够始终立于不败之地。</p><blockquote><p>有这样能自省的，始终为人民着想，为人民谋幸福，坚定维护主权，国家利益和人民利益的政党领导，我觉得中国人民是十分幸福的，放眼全世界，有几个国家的政府是这样的呢？这就是人民当家作主，这就是社会主义的优越性之一吧，没有西方资本主义国家的功利，是有人情味的政党。希望我们党能坚守初心，不被资本腐蚀，能继续努力为人民谋幸福，建设更美好的国家。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;读书笔记&quot;&gt;&lt;a href=&quot;#读书笔记&quot; class=&quot;headerlink&quot; title=&quot;读书笔记&quot;&gt;&lt;/a&gt;读书笔记&lt;/h1&gt;&lt;h2 id=&quot;《毛泽东文选》&quot;&gt;&lt;a href=&quot;#《毛泽东文选》&quot; class=&quot;headerlink&quot; title=&quot;《毛泽</summary>
      
    
    
    
    
    <category term="课后作业" scheme="https://github.com/FeOAr/FeOAr.github.io.git/tags/%E8%AF%BE%E5%90%8E%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>Hello Blog</title>
    <link href="https://github.com/FeOAr/FeOAr.github.io.git/2020/10/06/hello-world/"/>
    <id>https://github.com/FeOAr/FeOAr.github.io.git/2020/10/06/hello-world/</id>
    <published>2020-10-06T15:48:52.542Z</published>
    <updated>2020-10-07T04:26:18.564Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><blockquote><p>hello blog</p></blockquote><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
